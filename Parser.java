//### This file created by BYACC 1.8(/Java extension  1.15)
//### Java capabilities added 7 Jan 97, Bob Jamison
//### Updated : 27 Nov 97  -- Bob Jamison, Joe Nieten
//###           01 Jan 98  -- Bob Jamison -- fixed generic semantic constructor
//###           01 Jun 99  -- Bob Jamison -- added Runnable support
//###           06 Aug 00  -- Bob Jamison -- made state variables class-global
//###           03 Jan 01  -- Bob Jamison -- improved flags, tracing
//###           16 May 01  -- Bob Jamison -- added custom stack sizing
//###           04 Mar 02  -- Yuval Oren  -- improved java performance, added options
//###           14 Mar 02  -- Tomas Hurka -- -d support, static initializer workaround
//### Please send bug reports to tom@hukatronic.cz
//### static char yysccsid[] = "@(#)yaccpar	1.8 (Berkeley) 01/20/90";






//#line 2 "Parser.y"
	import java.io.*;
	import java.util.*;
//#line 20 "Parser.java"




public class Parser
{

boolean yydebug;        //do I want debug output?
int yynerrs;            //number of errors so far
int yyerrflag;          //was there an error?
int yychar;             //the current working character

//########## MESSAGES ##########
//###############################################################
// method: debug
//###############################################################
void debug(String msg)
{
  if (yydebug)
    System.out.println(msg);
}

//########## STATE STACK ##########
final static int YYSTACKSIZE = 500;  //maximum stack size
int statestk[] = new int[YYSTACKSIZE]; //state stack
int stateptr;
int stateptrmax;                     //highest index of stackptr
int statemax;                        //state when highest index reached
//###############################################################
// methods: state stack push,pop,drop,peek
//###############################################################
final void state_push(int state)
{
  try {
		stateptr++;
		statestk[stateptr]=state;
	 }
	 catch (ArrayIndexOutOfBoundsException e) {
     int oldsize = statestk.length;
     int newsize = oldsize * 2;
     int[] newstack = new int[newsize];
     System.arraycopy(statestk,0,newstack,0,oldsize);
     statestk = newstack;
     statestk[stateptr]=state;
  }
}
final int state_pop()
{
  return statestk[stateptr--];
}
final void state_drop(int cnt)
{
  stateptr -= cnt; 
}
final int state_peek(int relative)
{
  return statestk[stateptr-relative];
}
//###############################################################
// method: init_stacks : allocate and prepare stacks
//###############################################################
final boolean init_stacks()
{
  stateptr = -1;
  val_init();
  return true;
}
//###############################################################
// method: dump_stacks : show n levels of the stacks
//###############################################################
void dump_stacks(int count)
{
int i;
  System.out.println("=index==state====value=     s:"+stateptr+"  v:"+valptr);
  for (i=0;i<count;i++)
    System.out.println(" "+i+"    "+statestk[i]+"      "+valstk[i]);
  System.out.println("======================");
}


//########## SEMANTIC VALUES ##########
//public class ParserVal is defined in ParserVal.java


String   yytext;//user variable to return contextual strings
ParserVal yyval; //used to return semantic vals from action routines
ParserVal yylval;//the 'lval' (result) I got from yylex()
ParserVal valstk[];
int valptr;
//###############################################################
// methods: value stack push,pop,drop,peek.
//###############################################################
void val_init()
{
  valstk=new ParserVal[YYSTACKSIZE];
  yyval=new ParserVal();
  yylval=new ParserVal();
  valptr=-1;
}
void val_push(ParserVal val)
{
  if (valptr>=YYSTACKSIZE)
    return;
  valstk[++valptr]=val;
}
ParserVal val_pop()
{
  if (valptr<0)
    return new ParserVal();
  return valstk[valptr--];
}
void val_drop(int cnt)
{
int ptr;
  ptr=valptr-cnt;
  if (ptr<0)
    return;
  valptr = ptr;
}
ParserVal val_peek(int relative)
{
int ptr;
  ptr=valptr-relative;
  if (ptr<0)
    return new ParserVal();
  return valstk[ptr];
}
final ParserVal dup_yyval(ParserVal val)
{
  ParserVal dup = new ParserVal();
  dup.ival = val.ival;
  dup.dval = val.dval;
  dup.sval = val.sval;
  dup.obj = val.obj;
  return dup;
}
//#### end semantic value section ####
public final static short IDENTIFIER=257;
public final static short CONSTANT=258;
public final static short STRING_LITERAL=259;
public final static short SIZEOF=260;
public final static short PTR_OP=261;
public final static short INC_OP=262;
public final static short DEC_OP=263;
public final static short LEFT_OP=264;
public final static short RIGHT_OP=265;
public final static short LE_OP=266;
public final static short GE_OP=267;
public final static short EQ_OP=268;
public final static short NE_OP=269;
public final static short AND_OP=270;
public final static short OR_OP=271;
public final static short MUL_ASSIGN=272;
public final static short DIV_ASSIGN=273;
public final static short MOD_ASSIGN=274;
public final static short ADD_ASSIGN=275;
public final static short SUB_ASSIGN=276;
public final static short LEFT_ASSIGN=277;
public final static short RIGHT_ASSIGN=278;
public final static short AND_ASSIGN=279;
public final static short XOR_ASSIGN=280;
public final static short OR_ASSIGN=281;
public final static short TYPE_NAME=282;
public final static short TYPEDEF=283;
public final static short EXTERN=284;
public final static short STATIC=285;
public final static short AUTO=286;
public final static short REGISTER=287;
public final static short CHAR=288;
public final static short SHORT=289;
public final static short INT=290;
public final static short LONG=291;
public final static short SIGNED=292;
public final static short UNSIGNED=293;
public final static short FLOAT=294;
public final static short DOUBLE=295;
public final static short CONST=296;
public final static short VOLATILE=297;
public final static short VOID=298;
public final static short STRUCT=299;
public final static short UNION=300;
public final static short ENUM=301;
public final static short ELLIPSIS=302;
public final static short VAR=303;
public final static short PVAL=304;
public final static short BMSCR=305;
public final static short PREFSTR=306;
public final static short PEXINFO=307;
public final static short NULLPTR=308;
public final static short STR=309;
public final static short SPTR=310;
public final static short ARRAY=311;
public final static short GOSUB=312;
public final static short CASE=313;
public final static short DEFAULT=314;
public final static short IF=315;
public final static short ELSE=316;
public final static short SWITCH=317;
public final static short WHILE=318;
public final static short DO=319;
public final static short FOR=320;
public final static short GOTO=321;
public final static short CONTINUE=322;
public final static short BREAK=323;
public final static short RETURN=324;
public final static short NEWLINE=325;
public final static short LOWER_THAN_ELSE=326;
public final static short YYERRCODE=256;
final static short yylhs[] = {                           -1,
    0,    0,    1,    1,    1,    3,    3,    4,    4,    6,
    6,    6,    6,    2,    2,    2,    2,    2,    2,    2,
    5,    5,    5,    5,    5,    5,    5,    5,   15,   15,
   15,   15,   15,   15,   15,   15,   15,   15,   16,   16,
   16,   18,   18,   18,   18,   19,   19,   19,   19,   19,
   19,   20,   20,   22,   22,   22,   22,   23,   23,   23,
   24,   24,   24,   25,   25,   25,   25,   25,   26,   26,
   26,   27,   27,   28,   28,   29,   29,   30,   30,   31,
   31,   32,   32,   17,   17,   33,   33,   33,   33,   33,
   33,   33,   33,   33,   33,   33,   14,   14,   34,   35,
   35,   36,   36,   36,   36,   37,   37,   39,   39,    7,
    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
   42,   42,   42,   44,   44,   45,   45,   46,   47,   47,
   47,   47,   48,   48,   49,   49,   49,   43,   43,   43,
   50,   50,   51,   51,   38,   38,   40,   52,   52,   52,
   52,   52,   52,   52,   55,   55,   53,   53,   56,   56,
   57,   57,   57,   54,   54,   21,   21,   58,   59,   59,
   59,   59,   59,   59,   59,   59,   59,   41,   41,   41,
   60,   60,    8,    9,    9,    9,    9,   62,   62,   61,
   61,   10,   10,   11,   11,   12,   12,   12,   12,   13,
   13,   13,   13,   13,   13,   13,   13,   13,   13,   63,
   63,   64,   64,   65,   65,   65,   65,
};
final static short yylen[] = {                            2,
    1,    2,    1,    1,    0,    3,    2,    2,    1,    4,
    3,    2,    1,    2,    2,    2,    1,    2,    2,    2,
    1,    1,    1,    1,    1,    1,    1,    3,    1,    4,
    3,    2,    4,    3,    4,    2,    2,    2,    1,    3,
    2,    1,    2,    2,    4,    1,    1,    1,    1,    1,
    1,    1,    4,    1,    3,    3,    3,    1,    3,    3,
    1,    3,    3,    1,    3,    3,    3,    3,    1,    3,
    3,    1,    3,    1,    3,    1,    3,    1,    3,    1,
    3,    1,    5,    1,    3,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    3,    1,    1,
    2,    1,    2,    1,    2,    1,    3,    1,    3,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    5,    4,    2,    1,    1,    1,    2,    2,    2,    1,
    2,    1,    1,    3,    1,    2,    3,    4,    5,    2,
    1,    3,    1,    3,    1,    1,    1,    1,    3,    4,
    3,    4,    4,    3,    1,    2,    1,    3,    1,    3,
    2,    2,    1,    1,    3,    1,    2,    1,    3,    2,
    3,    3,    4,    2,    3,    3,    4,    1,    3,    4,
    1,    3,    2,    3,    4,    4,    5,    1,    2,    1,
    2,    1,    2,    5,    7,    5,    6,    6,    7,    3,
    5,    3,    3,    5,    1,    2,    1,    1,    2,    1,
    2,    1,    1,    4,    3,    3,    2,
};
final static short yydefred[] = {                         0,
   22,   23,   24,    0,  121,  111,  112,  113,  114,  117,
  118,  115,  116,  110,  134,  135,    0,  122,  123,  124,
  125,  126,  127,  128,  129,  130,    0,   26,    0,   25,
    0,    0,    0,    0,    0,  217,    0,    4,    0,    0,
   46,    0,   48,   49,   50,   51,    0,    0,    1,    3,
    0,   29,   21,    0,    0,    0,    0,   17,    0,    0,
    0,    0,   97,    0,    0,   54,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   84,  119,  120,    0,
   27,    0,   47,   44,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  155,  156,    0,
    0,    0,    0,    0,  193,    0,    2,   20,    0,    0,
   14,   15,   16,   18,   19,    0,  203,    0,   37,   38,
    0,    0,    0,   36,    0,   39,   87,   88,   89,   90,
   91,   92,   93,   94,   95,   96,   86,    0,   52,   43,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  151,    0,  213,    0,    0,
    0,    0,    0,  210,    0,    6,    0,    0,  139,   28,
    0,  141,    0,    0,  177,    0,  194,  200,    0,  198,
    0,    0,    0,    0,    0,   11,   98,    0,   31,    0,
   39,    0,   34,    0,   85,   55,   56,   57,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  136,    0,   45,    0,
    0,    0,  148,    0,    0,    0,    0,    0,    0,    8,
   53,  184,    0,    0,    0,    0,  169,    0,  180,   99,
    0,    0,    0,  103,  158,    0,    0,  106,    0,    0,
  105,  195,  201,  196,  199,    0,   10,   35,   33,   30,
   40,    0,    0,  132,  137,    0,    0,    0,  143,  149,
  154,  152,  214,    0,  206,    0,    0,    0,  211,    0,
  171,  172,  185,    0,  179,  181,  186,    0,  182,    0,
    0,    0,    0,    0,    0,  197,   83,  131,  146,    0,
    0,    0,  207,  208,    0,  168,  170,  187,  183,  159,
  107,    0,  188,  109,  174,  164,    0,    0,  161,    0,
  147,  144,  205,  209,  191,    0,  162,    0,  163,  160,
    0,  189,  175,  190,  192,
};
final static short yydgoto[] = {                         48,
   49,   50,   51,  176,   52,   53,   54,   55,   56,   57,
   58,   59,   60,   61,   62,  125,   63,   64,   65,   66,
  102,   67,   68,   69,   70,   71,   72,   73,   74,   75,
   76,   77,  138,  251,  190,  244,  257,  103,  258,  259,
  324,   78,   79,   80,  226,  227,  228,  278,  279,  165,
  166,  260,  245,  328,    0,  246,  247,  248,  186,  336,
  193,  194,    0,    0,    0,
};
final static short yysindex[] = {                      6564,
    0,    0,    0, 8771,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0, -110,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  -15,    0,   37,    0,
   50, 7458,   67,  -12, 8863,    0, 8863,    0, -232, 8158,
    0, -228,    0,    0,    0,    0, -244, 6564,    0,    0,
 -196,    0,    0,  -36, -184, -180, -170,    0, -163, -156,
  -42, 7526,    0,  -24, 8863,    0,   13,   46, -213,   -3,
  -96,   74,   89,   54,  -86,  -52,    0,    0,    0, -109,
    0, 8158,    0,    0,   63,  -69,  146,  -57, 8863, 8863,
 -127, 8863,  158,  -54,  160,  160,  361,    0,    0,  715,
   41,  164, 1377,  -16,    0, 6881,    0,    0,  162, 1408,
    0,    0,    0,    0,    0, 8863,    0,  -51,    0,    0,
 8089, 8863,  -50,    0,  165,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0, 8863,    0,    0,
 8863, 8863, 8863, 8863, 8863, 8863, 8863, 8863, 8863, 8863,
 8863, 8863, 8863, 8863, 8863, 8863, 8863, 8863, 8863,   88,
 1377,  175,  -69,  205,  -32,    0,  181,    0,   81,   87,
  227, 8863,  229,    0, 8863,    0,  361, 1377,    0,    0,
 8863,    0,  946, 8399,    0,    7,    0,    0,  715,    0,
    5, 1377, 7226, 7020, 1408,    0,    0,  361,    0,   92,
    0,   -9,    0, 8863,    0,    0,    0,    0,   13,   13,
   46,   46, -213, -213, -213, -213,   -3,   -3,  -96,   74,
   89,   54,  -86,    9, 1377, 1078,    0,  -40,    0,  -11,
 8863,  -69,    0,   12, 7458, 7458, 8863, 8490,   16,    0,
    0,    0, 1377,  -33,  231,  230,    0,  243,    0,    0,
  204, 1015, 8569,    0,    0,    5,  254,    0,  242,    8,
    0,    0,    0,    0,    0, 7320,    0,    0,    0,    0,
    0, 8863, 1108,    0,    0, 8863,  269,  284,    0,    0,
    0,    0,    0,   22,    0,   93, 7458,  115,    0,  584,
    0,    0,    0, 1045,    0,    0,    0,  288,    0,  237,
  290,    5, 8631,  653, 8693,    0,    0,    0,    0, 8863,
  -40, 7458,    0,    0, 7458,    0,    0,    0,    0,    0,
    0, 8631,    0,    0,    0,    0,  298,  116,    0,  249,
    0,    0,    0,    0,    0,   -4,    0,   96,    0,    0,
 8287,    0,    0,    0,    0,
};
final static short yyrindex[] = {                       344,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
 6237,    0,    0,    0, 7829,    0, 7898,    0,    0,    0,
    0, 8924,    0,    0,    0,    0,    0,  344,    0,    0,
    0,    0,    0, 2686,    0,    0,    0,    0,    0,    0,
   75, 8241,    0, 5944,    0,    0, 4858, 2979, 3048, 5513,
 3341,  152,  445,  514,  807, 3410,    0,    0,    0,    0,
    0,    0,    0,    0,  876,    0,    0,    0,    0,    0,
    0,    0,    0,    0, 1169, 1238,   34,    0,    0, 6718,
    0,    0,  -37,  313,    0,    0,    0,    0, 1531,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0, 1600,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0, 1893,
    0,    0,    0,   -2,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0, 6304,  -35,    0,    0,
    0,    0,    0,    0,    0,  126,    0,    0, 6398,    0,
 7387,   28,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0, 7994,    0,    0,    0,    0, 5151, 5220,
 3703, 3772, 4065, 4134, 4427, 4496, 5582, 5875, 4789, 1962,
 2255, 2324, 2617,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0, 7760,  127,    0,  317,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0, 7088,    0, 6792, 6651,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0, 2899, 1450,    0,    0,
    0,    0,    0,    1,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,
};
final static short yygindex[] = {                         0,
  314,  329,    0, -149,  -66,  -95, 9154,    0,    0,  -76,
    0,    0,  113, 1530,    0,  250,   14,   84,    0,  -39,
  295,   32,   33,   15,   29,  218,  232,  234,  238,  233,
    0, -167,    0, -166,  202,  -97,    0,  395,   95, -150,
 -303,    0,    0,    0,  173, -194,  -20,    0,   91,  236,
  171,    0, -230,    0,    0,    0,  110,  -94,    0,    0,
  211,    0,    0,    0,    0,
};
final static int YYTABLESIZE=9458;
static short yytable[];
static { yytable();}
static void yytable(){
yytable = new short[]{                        256,
  204,  116,  142,  142,  140,  140,  290,  110,  191,  185,
  159,  232,   86,  161,  196,  172,  250,  276,  335,  104,
  142,  298,  140,  183,   97,  140,   88,  240,  105,   94,
  177,  275,  232,  204,  116,  204,  137,  345,  204,  341,
  204,  153,  204,  204,  256,  204,  252,  304,  268,  143,
  146,  147,  116,  142,  141,  140,  150,  184,  151,  142,
  104,  104,  104,  250,  281,  104,  272,  104,  104,  104,
  104,  104,  104,  327,  184,  126,   89,  277,  275,  179,
  106,  180,  182,  270,  116,  250,  300,   84,  144,   90,
  145,  254,  233,  291,  261,  238,  191,  253,  305,  267,
  104,  206,  207,  208,  307,  301,   92,  202,  250,  309,
  177,  154,  202,  280,  202,  202,  202,  202,  104,  202,
  342,  235,  153,  204,  116,  204,  204,  236,  108,  197,
  116,  177,  269,  313,  201,  204,  116,  250,  330,  301,
  111,  241,  250,  331,  112,  254,   85,  160,  139,  292,
  104,  205,  104,  104,  113,  315,  339,  179,  116,  338,
  277,  114,  213,  214,  215,  216,  178,  173,  115,  178,
  173,  152,  153,  117,  124,  209,  210,  156,  211,  212,
  217,  218,  155,  157,   74,  163,   74,  164,   74,  167,
  171,   74,   74,   74,   74,   74,   74,   74,   74,  168,
  202,  173,  174,  116,  181,  195,  203,  198,  204,   74,
  225,   74,   74,   74,   74,  229,  255,  271,  158,  142,
  109,  140,  234,  255,  139,  139,  139,  139,  139,  139,
  139,  139,  139,  139,  139,  139,  139,  139,  139,  139,
  139,  139,   74,   87,   74,   74,   93,  127,  128,  129,
  130,  131,  132,  133,  134,  135,  136,  204,  204,  204,
  204,  255,  148,  149,  139,  231,  237,  139,  283,   27,
  239,  293,  289,  294,   74,   74,   74,   74,   34,   35,
   36,   37,  204,  295,  104,  104,  104,  104,  204,  204,
  204,  204,  204,  204,  204,  204,  296,  302,  204,  204,
  204,  204,  303,  204,  204,  204,  204,  204,  204,  204,
  204,  204,  204,  204,  139,  204,  323,  204,  204,  204,
  204,  204,  204,  204,  204,  204,  310,  311,  318,  319,
  320,  202,  202,  202,  202,  323,  139,  312,  337,  104,
  104,  340,  104,    5,  104,  104,  104,  104,  104,  104,
  104,  104,  343,  176,  323,  139,  202,  167,    7,  139,
   91,  107,  202,  202,  202,  202,  202,  202,  202,  202,
  200,  219,  202,  202,  202,  202,  162,  202,  202,  202,
  202,  202,  202,  202,  202,  202,  220,  202,  139,  221,
  223,  202,  202,  139,  222,  265,  321,  273,  230,  202,
  175,  332,  282,  317,  266,    0,    0,    0,   74,   74,
   74,   74,   74,   74,   74,   74,   74,   74,   74,   74,
   74,   74,   74,   74,   74,   74,   74,   74,   74,   74,
   74,   74,   74,   74,  188,    0,    0,    0,    0,   74,
   74,   74,   74,   74,   74,   74,   74,   74,   74,   74,
   74,   74,   74,    0,   74,   74,   74,   74,   74,   74,
   74,   74,   74,   74,   74,    0,   74,    0,   74,   74,
   74,   74,   74,   74,   74,   74,   74,   76,    0,   76,
    0,   76,   76,    0,   76,   76,   76,   76,   76,   76,
   76,   76,    0,    0,    0,    0,    0,    0,    0,    0,
  192,    0,   76,    0,   76,   76,   76,   76,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  263,  188,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   76,    0,   76,    0,    0,
    0,    0,    0,    0,    0,    0,   78,    0,   78,    0,
   78,   78,    0,   78,   78,   78,   78,   78,   78,   78,
   78,    0,    0,  284,  285,    0,    0,   76,   76,   76,
   76,   78,    0,   78,   78,   78,   78,  192,    0,    0,
    0,    0,    0,  192,    0,    0,  192,    0,  192,    0,
    0,    0,    0,    0,  263,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   78,    0,   78,   78,    0,    0,
    0,    0,    0,    0,    0,  314,    0,    1,    2,    3,
    0,    0,    0,  290,  242,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   78,  192,   78,   78,
  333,    0,    5,  334,    0,    0,  192,    0,    6,    7,
    8,    9,   10,   11,   12,   13,    0,    0,   14,   15,
   16,   17,    0,   18,   19,   20,   21,   22,   23,   24,
   25,   26,    0,   28,  184,    0,    0,   30,   81,    0,
    0,    0,    0,    0,  192,    0,    0,    0,  192,    0,
    0,    0,    0,  326,    0,    0,    0,    0,  192,    0,
    0,   76,   76,   76,   76,   76,   76,   76,   76,   76,
   76,   76,   76,   76,   76,   76,   76,   76,   76,   76,
   76,   76,   76,   76,   76,   76,   76,    0,    0,    0,
    0,    0,   76,   76,   76,   76,   76,   76,   76,   76,
   76,   76,   76,   76,   76,   76,    0,   76,   76,   76,
   76,   76,   76,   76,   76,   76,   76,   76,  110,   76,
    0,   76,   76,   76,   76,   76,   76,   76,   76,   76,
   78,   78,   78,   78,   78,   78,   78,   78,   78,   78,
   78,   78,   78,   78,   78,   78,   78,   78,   78,   78,
   78,   78,   78,   78,   78,   78,    0,    0,    0,    0,
    0,   78,   78,   78,   78,   78,   78,   78,   78,   78,
   78,   78,   78,   78,   78,    0,   78,   78,   78,   78,
   78,   78,   78,   78,   78,   78,   78,    0,   78,    0,
   78,   78,   78,   78,   78,   78,   78,   78,   78,   80,
  255,   80,    0,   80,   80,    0,   80,   80,   80,   80,
   80,   80,   80,   80,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   80,    5,   80,   80,   80,   80,
    0,    6,    7,    8,    9,   10,   11,   12,   13,   98,
   99,   14,   15,   16,   17,    0,   18,   19,   20,   21,
   22,   23,   24,   25,   26,    0,    0,   80,    0,   80,
   80,    0,    0,    0,    0,    0,    0,    0,  150,  325,
  150,    0,  150,  150,    0,  150,  150,  150,  150,  150,
  150,  150,  150,    0,    0,    0,    0,    0,    0,   80,
   80,   80,   80,  150,    5,  150,  150,  150,  150,    0,
    6,    7,    8,    9,   10,   11,   12,   13,   98,   99,
   14,   15,   16,   17,    0,   18,   19,   20,   21,   22,
   23,   24,   25,   26,    0,    0,  150,    0,  150,  150,
    0,  109,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  183,  242,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    5,    0,    0,  150,
  150,  150,    6,    7,    8,    9,   10,   11,   12,   13,
   98,   99,   14,   15,   16,   17,    0,   18,   19,   20,
   21,   22,   23,   24,   25,   26,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  184,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  297,    0,    0,    0,    0,
    0,    0,    0,   80,   80,   80,   80,   80,   80,   80,
   80,   80,   80,   80,   80,   80,    0,   80,   80,   80,
   80,   80,   80,   80,   80,   80,   80,   80,   80,    0,
    0,    0,    0,    0,   80,   80,   80,   80,   80,   80,
   80,   80,   80,   80,   80,   80,   80,   80,    0,   80,
   80,   80,   80,   80,   80,   80,   80,   80,   80,   80,
    0,   80,    0,   80,   80,   80,   80,   80,   80,   80,
   80,   80,  150,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,    0,    0,
    0,    0,    0,  150,  150,  150,  150,  150,  150,  150,
  150,  150,  150,  150,  150,  150,  150,    0,  150,  150,
  150,  150,  150,  150,  150,  150,  150,  150,  150,    0,
  150,    0,  150,  150,  150,  150,  150,  150,  150,  150,
  150,  216,  274,  216,    0,  216,  216,    0,  216,  216,
  216,  216,    0,  216,  216,  216,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  216,    5,  216,  216,
  216,  216,  308,    6,    7,    8,    9,   10,   11,   12,
   13,   98,   99,   14,   15,   16,   17,    0,   18,   19,
   20,   21,   22,   23,   24,   25,   26,    0,    0,  216,
    0,  216,  216,    0,    0,    0,    0,    0,    0,    0,
  219,    0,  219,    0,  219,  219,    0,  219,  219,  219,
  219,    0,  219,  219,  219,    0,    0,    0,    0,    0,
    0,  216,  216,  216,  216,  219,    5,  219,  219,  219,
  219,    0,    6,    7,    8,    9,   10,   11,   12,   13,
   98,   99,   14,   15,   16,   17,    0,   18,   19,   20,
   21,   22,   23,   24,   25,   26,    5,    0,  219,    0,
  219,  219,    6,    7,    8,    9,   10,   11,   12,   13,
   98,   99,   14,   15,   16,   17,  316,   18,   19,   20,
   21,   22,   23,   24,   25,   26,    0,    0,    0,    5,
  219,  219,  219,  219,    0,    6,    7,    8,    9,   10,
   11,   12,   13,   98,   99,   14,   15,   16,   17,    0,
   18,   19,   20,   21,   22,   23,   24,   25,   26,    5,
    0,    0,    0,    0,    0,    6,    7,    8,    9,   10,
   11,   12,   13,   98,   99,   14,   15,   16,   17,    0,
   18,   19,   20,   21,   22,   23,   24,   25,   26,    0,
    0,    0,    0,    0,    0,  216,  216,  216,  216,  216,
  216,  216,  216,  216,  216,  216,  216,  216,  216,  216,
  216,  216,  216,  216,  216,  216,  216,  216,  216,  216,
  216,    0,    0,    0,    0,    0,  216,  216,  216,  216,
  216,  216,  216,  216,  216,  216,  216,  216,  216,  216,
    0,  216,  216,  216,  216,  216,  216,  216,  216,  216,
  216,  216,    0,  216,    0,  216,  216,  216,  216,  216,
  216,  216,  216,  216,  219,  219,  219,  219,  219,  219,
  219,  219,  219,  219,  219,  219,  219,  219,  219,  219,
  219,  219,  219,  219,  219,  219,  219,  219,  219,  219,
    0,    0,    0,    0,    0,  219,  219,  219,  219,  219,
  219,  219,  219,  219,  219,  219,  219,  219,  219,    0,
  219,  219,  219,  219,  219,  219,  219,  219,  219,  219,
  219,    0,  219,    0,  219,  219,  219,  219,  219,  219,
  219,  219,  219,   12,   95,   12,   96,   12,   12,  101,
   12,   12,   12,   12,  138,   12,   12,   12,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   12,    0,
   12,   12,   12,   12,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  101,    0,    0,    0,    0,    0,    0,  169,  170,
    0,   12,    0,   12,   12,    0,    0,    0,    0,    0,
    0,    0,   32,    0,   32,    0,   32,   32,    0,   32,
   32,   32,   32,    0,   32,   32,   32,    0,    0,    0,
  101,  202,    0,   12,   12,   12,   12,   32,    5,   32,
   32,   32,   32,    0,    6,    7,    8,    9,   10,   11,
   12,   13,   98,   99,   14,   15,   16,   17,    0,   18,
   19,   20,   21,   22,   23,   24,   25,   26,  224,    5,
   32,    0,   32,   32,    0,    6,    7,    8,    9,   10,
   11,   12,   13,    0,  101,   14,   15,   16,   17,    0,
   18,   19,   20,   21,   22,   23,   24,   25,   26,    0,
    0,    0,   32,   32,   32,   32,    0,    0,    0,    0,
    0,  138,    0,    0,    0,    0,    0,  138,  138,  138,
  138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
  138,    0,  138,  138,  138,  138,  138,  138,  138,  138,
  138,    0,    0,    0,    0,    0,  286,  288,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   12,   12,   12,
   12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
   12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
   12,   12,   12,    0,    0,    0,    0,    0,   12,   12,
   12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
   12,   12,    0,   12,   12,   12,   12,   12,   12,   12,
   12,   12,   12,   12,    0,   12,    0,   12,   12,   12,
   12,   12,   12,   12,   12,   12,   32,   32,   32,   32,
   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,
   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,
   32,   32,    0,    0,    0,    0,    0,   32,   32,   32,
   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,
   32,    0,   32,   32,   32,   32,   32,   32,   32,   32,
   32,   32,   32,    0,   32,    0,   32,   32,   32,   32,
   32,   32,   32,   32,   32,  133,    0,  133,    0,  133,
  133,    0,  133,  133,  133,  133,  133,  133,  133,  133,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  133,    0,  133,  133,  133,  133,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  133,    0,  133,  133,    0,    0,    0,
    0,    0,    0,    0,   75,    0,   75,    0,   75,    0,
    0,   75,   75,   75,   75,   75,   75,   75,   75,    0,
    0,    0,    0,    0,    0,    0,  133,  133,  133,   75,
    0,   75,   75,   75,   75,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   75,    0,   75,   75,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   75,   75,   75,   75,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  133,
  133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
  133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
  133,  133,  133,  133,  133,    0,    0,    0,    0,    0,
  133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
  133,  133,  133,  133,    0,  133,  133,  133,  133,  133,
  133,  133,  133,  133,  133,  133,    0,  133,    0,  133,
  133,  133,  133,  133,  133,  133,  133,  133,   75,   75,
   75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
   75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
   75,   75,   75,   75,    0,    0,    0,    0,    0,   75,
   75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
   75,   75,   75,    0,   75,   75,   75,   75,   75,   75,
   75,   75,   75,   75,   75,    0,   75,    0,   75,   75,
   75,   75,   75,   75,   75,   75,   75,   77,    0,   77,
    0,   77,   77,    0,   77,   77,   77,   77,   77,   77,
   77,   77,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   77,    0,   77,   77,   77,   77,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   77,    0,   77,    0,    0,
    0,    0,    0,    0,    0,    0,   79,    0,   79,    0,
   79,   79,    0,   79,   79,   79,   79,   79,   79,   79,
   79,    0,    0,    0,    0,    0,    0,   77,   77,   77,
   77,   79,    0,   79,   79,   79,   79,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   79,    0,   79,   79,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   79,    0,   79,   79,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   77,   77,   77,   77,   77,   77,   77,   77,   77,
   77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
   77,   77,   77,   77,   77,   77,   77,    0,    0,    0,
    0,    0,   77,   77,   77,   77,   77,   77,   77,   77,
   77,   77,   77,   77,   77,   77,    0,   77,   77,   77,
   77,   77,   77,   77,   77,   77,   77,   77,    0,   77,
    0,   77,   77,   77,   77,   77,   77,   77,   77,   77,
   79,   79,   79,   79,   79,   79,   79,   79,   79,   79,
   79,   79,   79,   79,   79,   79,   79,   79,   79,   79,
   79,   79,   79,   79,   79,   79,    0,    0,    0,    0,
    0,   79,   79,   79,   79,   79,   79,   79,   79,   79,
   79,   79,   79,   79,   79,    0,   79,   79,   79,   79,
   79,   79,   79,   79,   79,   79,   79,    0,   79,    0,
   79,   79,   79,   79,   79,   79,   79,   79,   79,   81,
    0,   81,    0,   81,   81,    0,   81,   81,   81,   81,
   81,   81,   81,   81,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   81,    0,   81,   81,   81,   81,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   81,    0,   81,
   81,    0,    0,    0,    0,    0,    0,    0,   13,    0,
   13,    0,   13,   13,    0,   13,   13,   13,   13,    0,
   13,   13,   13,    0,    0,    0,    0,    0,    0,   81,
   81,   81,   81,   13,    0,   13,   13,   13,   13,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   13,    0,   13,   13,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   13,   13,
   13,   13,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   81,   81,   81,   81,   81,   81,   81,
   81,   81,   81,   81,   81,   81,    0,   81,   81,   81,
   81,   81,   81,   81,   81,   81,   81,   81,   81,    0,
    0,    0,    0,    0,   81,   81,   81,   81,   81,   81,
   81,   81,   81,   81,   81,   81,   81,   81,    0,   81,
   81,   81,   81,   81,   81,   81,   81,   81,   81,   81,
    0,   81,    0,   81,   81,   81,   81,   81,   81,   81,
   81,   81,  145,   13,   13,   13,   13,   13,   13,   13,
   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
   13,   13,   13,   13,   13,   13,   13,   13,    0,    0,
    0,    0,    0,   13,   13,   13,   13,   13,   13,   13,
   13,   13,   13,   13,   13,   13,   13,    0,   13,   13,
   13,   13,   13,   13,   13,   13,   13,   13,   13,    0,
   13,    0,   13,   13,   13,   13,   13,   13,   13,   13,
   13,   61,    0,   61,    0,   61,   61,    0,   61,   61,
   61,    0,   61,  145,   61,   61,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   61,    0,   61,   61,
   61,   61,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   61,
    0,   61,   61,    0,    0,    0,    0,    0,    0,    0,
   64,    0,   64,    0,   64,   64,    0,   64,   64,   64,
   64,   64,   64,   64,   64,    0,    0,    0,    0,    0,
    0,   61,   61,   61,   61,   64,    0,   64,   64,   64,
   64,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   64,    0,
   64,   64,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   64,   64,   64,   64,    0,    0,    0,    0,    0,    0,
  145,    0,    0,    0,    0,    0,  145,  145,  145,  145,
  145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
    0,  145,  145,  145,  145,  145,  145,  145,  145,  145,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   61,   61,   61,   61,   61,
   61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
   61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
   61,    0,    0,    0,    0,    0,   61,   61,   61,   61,
   61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
    0,   61,   61,   61,   61,   61,   61,   61,   61,   61,
   61,   61,    0,   61,    0,   61,   61,   61,   61,   61,
   61,   61,   61,   61,   64,   64,   64,   64,   64,   64,
   64,    0,    0,   64,   64,   64,   64,   64,   64,   64,
   64,   64,   64,   64,   64,   64,   64,   64,   64,   64,
    0,    0,    0,    0,    0,   64,   64,   64,   64,   64,
   64,   64,   64,   64,   64,   64,   64,   64,   64,    0,
   64,   64,   64,   64,   64,   64,   64,   64,   64,   64,
   64,    0,   64,    0,   64,   64,   64,   64,   64,   64,
   64,   64,   64,   72,    0,   72,    0,   72,   72,    0,
   72,   72,   72,   72,   72,   72,   72,   72,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   72,    0,
   72,   72,   72,   72,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   72,    0,   72,   72,    0,    0,    0,    0,    0,
    0,    0,   82,    0,   82,    0,   82,   82,    0,   82,
   82,   82,   82,   82,   82,   82,   82,    0,    0,    0,
    0,    0,    0,   72,   72,   72,   72,   82,    0,   82,
   82,   82,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   82,    0,   82,   82,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   82,   82,   82,   82,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   72,   72,   72,
   72,   72,   72,   72,   72,   72,   72,   72,    0,    0,
   72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
   72,   72,   72,    0,    0,    0,    0,    0,   72,   72,
   72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
   72,   72,    0,   72,   72,   72,   72,   72,   72,   72,
   72,   72,   72,   72,    0,   72,    0,   72,   72,   72,
   72,   72,   72,   72,   72,   72,   82,   82,   82,   82,
   82,   82,   82,   82,   82,   82,   82,   82,   82,   82,
    0,   82,   82,   82,   82,   82,   82,   82,   82,   82,
   82,   82,    0,    0,    0,    0,    0,   82,   82,   82,
   82,   82,   82,   82,   82,   82,   82,   82,   82,   82,
   82,    0,   82,   82,   82,   82,   82,   82,   82,   82,
   82,   82,   82,    0,   82,    0,   82,   82,   82,   82,
   82,   82,   82,   82,   82,   62,    0,   62,    0,   62,
   62,    0,   62,   62,   62,    0,   62,    0,   62,   62,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   62,    0,   62,   62,   62,   62,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   62,    0,   62,   62,    0,    0,    0,
    0,    0,    0,    0,   63,    0,   63,    0,   63,   63,
    0,   63,   63,   63,    0,   63,    0,   63,   63,    0,
    0,    0,    0,    0,    0,   62,   62,   62,   62,   63,
    0,   63,   63,   63,   63,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   63,    0,   63,   63,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   63,   63,   63,   63,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   62,
   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
   62,   62,   62,   62,   62,    0,    0,    0,    0,    0,
   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
   62,   62,   62,   62,    0,   62,   62,   62,   62,   62,
   62,   62,   62,   62,   62,   62,    0,   62,    0,   62,
   62,   62,   62,   62,   62,   62,   62,   62,   63,   63,
   63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
   63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
   63,   63,   63,   63,    0,    0,    0,    0,    0,   63,
   63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
   63,   63,   63,    0,   63,   63,   63,   63,   63,   63,
   63,   63,   63,   63,   63,    0,   63,    0,   63,   63,
   63,   63,   63,   63,   63,   63,   63,   67,    0,   67,
    0,   67,   67,    0,   67,   67,   67,   67,   67,   67,
   67,   67,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   67,    0,   67,   67,   67,   67,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   67,    0,   67,   67,    0,
    0,    0,    0,    0,    0,    0,   68,    0,   68,    0,
   68,   68,    0,   68,   68,   68,   68,   68,   68,   68,
   68,    0,    0,    0,    0,    0,    0,   67,   67,   67,
   67,   68,    0,   68,   68,   68,   68,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   68,    0,   68,   68,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   68,   68,   68,   68,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   67,   67,   67,   67,   67,   67,   67,    0,    0,
   67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
   67,   67,   67,   67,   67,   67,   67,    0,    0,    0,
    0,    0,   67,   67,   67,   67,   67,   67,   67,   67,
   67,   67,   67,   67,   67,   67,    0,   67,   67,   67,
   67,   67,   67,   67,   67,   67,   67,   67,    0,   67,
    0,   67,   67,   67,   67,   67,   67,   67,   67,   67,
   68,   68,   68,   68,   68,   68,   68,    0,    0,   68,
   68,   68,   68,   68,   68,   68,   68,   68,   68,   68,
   68,   68,   68,   68,   68,   68,    0,    0,    0,    0,
    0,   68,   68,   68,   68,   68,   68,   68,   68,   68,
   68,   68,   68,   68,   68,    0,   68,   68,   68,   68,
   68,   68,   68,   68,   68,   68,   68,    0,   68,    0,
   68,   68,   68,   68,   68,   68,   68,   68,   68,   65,
    0,   65,    0,   65,   65,    0,   65,   65,   65,   65,
   65,   65,   65,   65,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   65,    0,   65,   65,   65,   65,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   65,    0,   65,
   65,    0,    0,    0,    0,    0,    0,    0,   66,    0,
   66,    0,   66,   66,    0,   66,   66,   66,   66,   66,
   66,   66,   66,    0,    0,    0,    0,    0,    0,   65,
   65,   65,   65,   66,    0,   66,   66,   66,   66,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   66,    0,   66,   66,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   66,   66,
   66,   66,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   65,   65,   65,   65,   65,   65,   65,
    0,    0,   65,   65,   65,   65,   65,   65,   65,   65,
   65,   65,   65,   65,   65,   65,   65,   65,   65,    0,
    0,    0,    0,    0,   65,   65,   65,   65,   65,   65,
   65,   65,   65,   65,   65,   65,   65,   65,    0,   65,
   65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
    0,   65,    0,   65,   65,   65,   65,   65,   65,   65,
   65,   65,   66,   66,   66,   66,   66,   66,   66,    0,
    0,   66,   66,   66,   66,   66,   66,   66,   66,   66,
   66,   66,   66,   66,   66,   66,   66,   66,    0,    0,
    0,    0,    0,   66,   66,   66,   66,   66,   66,   66,
   66,   66,   66,   66,   66,   66,   66,    0,   66,   66,
   66,   66,   66,   66,   66,   66,   66,   66,   66,    0,
   66,    0,   66,   66,   66,   66,   66,   66,   66,   66,
   66,   73,    0,   73,    0,   73,   73,    0,   73,   73,
   73,   73,   73,   73,   73,   73,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   73,    0,   73,   73,
   73,   73,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   73,
    0,   73,   73,    0,    0,    0,    0,    0,    0,    0,
   58,    0,   58,    0,    0,   58,    0,   58,   58,    0,
   58,   58,   58,   58,    0,    0,    0,    0,    0,    0,
    0,   73,   73,   73,   73,   58,    0,   58,   58,   58,
   58,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   58,    0,
   58,   58,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   58,   58,   58,   58,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   73,   73,   73,   73,   73,
   73,   73,   73,   73,   73,   73,    0,    0,   73,   73,
   73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
   73,    0,    0,    0,    0,    0,   73,   73,   73,   73,
   73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
    0,   73,   73,   73,   73,   73,   73,   73,   73,   73,
   73,   73,    0,   73,    0,   73,   73,   73,   73,   73,
   73,   73,   73,   73,   58,   58,   58,   58,   58,   58,
   58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
   58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
    0,    0,    0,    0,    0,   58,   58,   58,   58,   58,
   58,   58,   58,   58,   58,   58,   58,   58,   58,    0,
   58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
   58,    0,   58,    0,   58,   58,   58,   58,   58,   58,
   58,   58,   58,   59,    0,   59,    0,    0,   59,    0,
   59,   59,    0,   59,   59,   59,   59,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   59,    0,
   59,   59,   59,   59,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   59,    0,   59,   59,    0,    0,    0,    0,    0,
    0,    0,   60,    0,   60,    0,    0,   60,    0,   60,
   60,    0,   60,   60,   60,   60,    0,    0,    0,    0,
    0,    0,    0,   59,   59,   59,   59,   60,    0,   60,
   60,   60,   60,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   60,    0,   60,   60,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   60,   60,   60,   60,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   59,   59,   59,
   59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
   59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
   59,   59,   59,    0,    0,    0,    0,    0,   59,   59,
   59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
   59,   59,    0,   59,   59,   59,   59,   59,   59,   59,
   59,   59,   59,   59,    0,   59,    0,   59,   59,   59,
   59,   59,   59,   59,   59,   59,   60,   60,   60,   60,
   60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
   60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
   60,   60,    0,    0,    0,    0,    0,   60,   60,   60,
   60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
   60,    0,   60,   60,   60,   60,   60,   60,   60,   60,
   60,   60,   60,    0,   60,    0,   60,   60,   60,   60,
   60,   60,   60,   60,   60,   69,    0,   69,    0,   69,
   69,    0,   69,   69,   69,   69,   69,   69,   69,   69,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   69,    0,    0,   69,    0,   69,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   69,    0,   69,   69,    0,    0,    0,
    0,    0,    0,    0,   70,    0,   70,    0,   70,   70,
    0,   70,   70,   70,   70,   70,   70,   70,   70,    0,
    0,    0,    0,    0,    0,   69,   69,   69,   69,   70,
    0,    0,   70,    0,   70,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   70,    0,   70,   70,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   70,   70,   70,   70,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   69,
   69,   69,   69,   69,   69,   69,   69,   69,    0,    0,
   69,   69,   69,   69,   69,   69,   69,   69,   69,   69,
   69,   69,   69,   69,   69,    0,    0,    0,    0,    0,
   69,   69,   69,   69,   69,   69,   69,   69,   69,   69,
   69,   69,   69,   69,    0,   69,   69,   69,   69,   69,
   69,   69,   69,   69,   69,   69,    0,   69,    0,   69,
   69,   69,   69,   69,   69,   69,   69,   69,   70,   70,
   70,   70,   70,   70,   70,   70,   70,    0,    0,   70,
   70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
   70,   70,   70,   70,    0,    0,    0,    0,    0,   70,
   70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
   70,   70,   70,    0,   70,   70,   70,   70,   70,   70,
   70,   70,   70,   70,   70,    0,   70,    0,   70,   70,
   70,   70,   70,   70,   70,   70,   70,   71,    0,   71,
    0,   71,   71,    0,   71,   71,   71,   71,   71,   71,
   71,   71,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   71,    0,    0,   71,    0,   71,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   71,    0,   71,   71,    0,
    0,    0,    0,    0,    0,    0,   52,    0,   52,    0,
   52,   52,    0,   52,   52,   52,   52,   52,   52,   52,
   52,    0,    0,    0,    0,    0,    0,   71,   71,   71,
   71,   52,    0,   52,    0,   52,   52,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   52,    0,   52,   52,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   52,   52,   52,   52,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   71,   71,   71,   71,   71,   71,   71,   71,   71,
    0,    0,   71,   71,   71,   71,   71,   71,   71,   71,
   71,   71,   71,   71,   71,   71,   71,    0,    0,    0,
    0,    0,   71,   71,   71,   71,   71,   71,   71,   71,
   71,   71,   71,   71,   71,   71,    0,   71,   71,   71,
   71,   71,   71,   71,   71,   71,   71,   71,    0,   71,
    0,   71,   71,   71,   71,   71,   71,   71,   71,   71,
   52,   52,   52,   52,   52,   52,   52,   52,   52,   52,
   52,   52,   52,   52,   52,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   52,    0,    0,    0,    0,
    0,   52,   52,   52,   52,   52,   52,   52,   52,   52,
   52,   52,   52,   52,   52,    0,   52,   52,   52,   52,
   52,   52,   52,   52,   52,   52,   52,    0,   52,    0,
   52,   52,   52,   52,   52,   52,   52,   52,   52,   27,
    0,    0,    0,   27,   27,    0,    0,    0,   27,   27,
   27,   27,   27,   27,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   27,   27,   27,   27,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   27,    0,    0,
   27,    0,    0,    0,    0,    0,    9,    0,    9,    0,
    9,    9,    0,    0,    9,    9,    9,    9,    9,    9,
    9,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   27,    9,   27,    9,    9,    9,    9,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    9,    0,    9,    9,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    9,    9,    9,    9,
   13,    0,  102,    0,   13,   13,    0,   13,    0,   13,
   13,    0,   13,   13,   13,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   13,   13,   13,
   13,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   13,    0,
    0,   13,    0,   27,   27,   27,   27,   27,   27,   27,
   27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
   27,   27,   27,   27,   27,   27,   27,   27,   27,    0,
  102,   13,  102,   13,   27,   27,   27,   27,   27,   27,
   27,   27,    0,    0,   27,   27,   27,   27,    0,   27,
   27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
    0,    0,    0,   27,   27,    0,    0,   27,   27,   27,
   27,   27,    0,    9,    9,    9,    9,    9,    9,    9,
    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
    9,    9,    9,    9,    9,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   46,    0,   39,    9,
    9,   41,    0,   40,    0,   42,   43,    0,   44,    0,
    0,    0,    0,    0,    0,    9,    0,    0,    9,    0,
    0,    0,    9,    9,    9,    9,    9,    9,    9,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   13,   13,   13,   13,   13,
   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
   13,   13,   13,   13,   13,   13,   13,   13,   13,    0,
    0,    0,    0,  157,    0,  157,   47,    0,  157,   45,
    0,  157,  157,  157,  157,  157,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  157,   13,
   13,  157,  102,    0,   13,   13,  102,  102,   13,   13,
   13,   13,   13,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   13,    0,    0,    0,   13,   13,    0,   13,   13,   13,
   13,    0,   13,   13,   13,    0,    0,    0,    0,    0,
    0,    0,    0,  157,    0,  157,  157,   13,   13,   13,
   13,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   13,    0,
    0,   13,    0,    0,    0,    0,    0,    0,    0,    0,
    1,    2,    3,    4,  108,    0,  108,    0,    0,  108,
    0,  108,    0,  108,  108,  108,  108,    0,    0,    0,
    0,   13,    0,   13,    0,    5,    0,    0,    0,    0,
    0,    6,    7,    8,    9,   10,   11,   12,   13,    0,
    0,   14,   15,   16,   17,    0,   18,   19,   20,   21,
   22,   23,   24,   25,   26,   27,   28,    0,   29,    0,
   30,   31,   32,   33,   34,   35,   36,   37,   38,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  157,  157,  157,
  157,    0,    0,   46,  108,   39,  108,  108,   41,    0,
   40,    0,   42,   43,    0,   44,    0,    0,    0,    0,
    0,    0,  157,    0,    0,    0,    0,    0,  157,  157,
  157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
  157,  157,    0,  157,  157,  157,  157,  157,  157,  157,
  157,  157,  157,  157,    0,  157,    0,  157,  157,  157,
  157,  157,  157,  157,  157,   13,   13,   13,   13,   13,
   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
   13,   13,   13,   13,   13,   13,   13,   13,   13,    0,
    0,    0,    0,   47,    0,  187,   45,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   13,
   13,    0,    0,    0,   13,   13,    0,    0,   13,   13,
   13,   13,    0,    0,    0,    0,    0,    0,  108,  108,
  108,  108,   46,    0,   39,    0,    0,   41,    0,   40,
    0,   42,   43,    0,   44,    0,    0,    0,    0,    0,
    0,    0,    0,  108,    0,    0,    0,    0,    0,  108,
  108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
  108,  108,  108,    0,  108,  108,  108,  108,  108,  108,
  108,  108,  108,  108,  108,    0,  108,    0,  108,  108,
  108,  108,  108,  108,  108,  108,    0,    0,    0,    0,
  101,    0,  101,    0,    0,  101,    0,  101,    0,  101,
  101,    0,  101,    0,    0,    0,    0,    1,    2,    3,
    4,    0,   47,    0,  264,   45,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    5,    0,    0,    0,    0,    0,    6,    7,
    8,    9,   10,   11,   12,   13,   98,   99,   14,   15,
   16,   17,    0,   18,   19,   20,   21,   22,   23,   24,
   25,   26,   27,   28,    0,   29,    0,   30,   31,   32,
   33,   34,   35,   36,   37,    0,    0,    0,    0,    0,
  101,    0,  101,  101,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   46,    0,
   39,    0,    0,   41,    0,   40,    0,   42,   43,    0,
   44,    0,    0,    0,    0,    0,    1,    2,    3,    4,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    5,    0,    0,    0,    0,    0,    6,    7,    8,
    9,   10,   11,   12,   13,   98,   99,   14,   15,   16,
   17,    0,   18,   19,   20,   21,   22,   23,   24,   25,
   26,   27,   28,    0,   29,    0,   30,   31,   32,   33,
   34,   35,   36,   37,  101,  101,  101,  101,   47,    0,
  262,   45,   46,    0,   39,    0,    0,   41,    0,   40,
    0,   42,   43,    0,   44,    0,    0,    0,    0,  101,
    0,    0,    0,    0,    0,  101,  101,  101,  101,  101,
  101,  101,  101,  101,  101,  101,  101,  101,  101,    0,
  101,  101,  101,  101,  101,  101,  101,  101,  101,  101,
  101,    0,  101,    0,  101,  101,  101,  101,  101,  101,
  101,  101,    0,    0,    0,    0,    0,    0,    0,  100,
    0,  100,    0,    0,  100,    0,    0,    0,  100,  100,
    0,  100,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   47,    0,  306,   45,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    1,    2,    3,    4,    0,    0,    0,    0,
   46,    0,   39,    0,    0,   41,    0,   40,    0,   42,
   43,    0,   44,    0,    0,    0,    0,    5,    0,  100,
    0,  100,  100,    6,    7,    8,    9,   10,   11,   12,
   13,    0,    0,   14,   15,   16,   17,    0,   18,   19,
   20,   21,   22,   23,   24,   25,   26,   27,   28,    0,
   29,    0,   30,   31,   32,   33,   34,   35,   36,   37,
    0,    0,    0,    0,    0,    0,    0,    0,   46,    0,
    0,    0,    0,   41,    0,  121,    0,   83,   43,    0,
   44,  123,    0,    0,    0,    0,    1,    2,    3,    4,
   47,    0,    0,   45,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    5,    0,    0,    0,    0,    0,    6,    7,    8,
    9,   10,   11,   12,   13,    0,  122,   14,   15,   16,
   17,    0,   18,   19,   20,   21,   22,   23,   24,   25,
   26,   27,   28,    0,   29,    0,   30,   31,   32,   33,
   34,   35,   36,   37,  100,  100,  100,    0,    0,    0,
    0,   45,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  100,    0,
    0,    0,    0,    0,  100,  100,  100,  100,  100,  100,
  100,  100,  100,  100,  100,  100,  100,  100,    0,  100,
  100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
    0,  100,    0,  100,  100,  100,  100,  100,  100,  100,
  100,    0,    0,    0,    1,    2,    3,    4,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    5,
    0,    0,    0,    0,    0,    6,    7,    8,    9,   10,
   11,   12,   13,    0,    0,   14,   15,   16,   17,    0,
   18,   19,   20,   21,   22,   23,   24,   25,   26,   27,
   28,    0,   29,    0,   30,   31,   32,   33,   34,   35,
   36,   37,    1,    2,    3,    4,  118,  119,  120,    0,
    0,    0,  102,    0,  102,    0,    0,  102,    0,  102,
  102,  102,  102,  102,  102,    0,    0,    5,    0,    0,
    0,    0,    0,    6,    7,    8,    9,   10,   11,   12,
   13,    0,    0,   14,   15,   16,   17,    0,   18,   19,
   20,   21,   22,   23,   24,   25,   26,   27,   28,    0,
    0,    0,   30,   81,    0,    0,   34,   35,   36,   37,
  102,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  215,    0,  215,    0,    0,    0,  215,
    0,    0,  215,    0,  215,  215,    0,    0,    0,    0,
    0,    0,  102,    0,  102,  102,  215,    0,  215,  215,
  215,  215,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  215,
    0,  215,  215,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  218,    0,  218,    0,    0,    0,  218,    0,
    0,  218,    0,  218,  218,    0,    0,    0,    0,    0,
    0,  215,  215,  215,    0,  218,    0,  218,  218,  218,
  218,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  218,    0,
  218,  218,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  102,  102,  102,  102,
  218,  218,  218,    0,    0,    0,    0,    0,   41,    0,
   41,    0,    0,    0,   41,    0,    0,   41,    0,   41,
   41,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   41,    0,   41,   41,   41,   41,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  102,  102,    0,  102,    0,  102,  102,  102,  102,
  102,  102,  102,  102,   41,    0,   41,   41,    0,  215,
  215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
  215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
    0,    0,    0,    0,    0,    0,   41,   41,   41,    0,
    0,   46,    0,    0,  215,  215,   41,    0,   40,  199,
   83,   43,    0,   44,    0,    0,    0,    0,    0,    0,
  215,    0,    0,  215,    0,    0,    0,  215,  215,  215,
  215,  215,  215,  215,    0,    0,    0,    0,  218,  218,
  218,  218,  218,  218,  218,  218,  218,  218,  218,  218,
  218,  218,  218,  218,  218,  218,  218,  218,  218,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   46,    0,    0,  218,  218,   41,    0,   40,    0,   83,
   43,    0,   44,    0,    0,    0,    0,    0,    0,  218,
    0,    0,  218,    0,   45,    0,  218,  218,  218,  218,
  218,  218,  218,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   41,   41,   41,   41,   41,   41,
   41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
   41,   41,   41,   41,   41,   42,    0,   42,    0,    0,
    0,   42,    0,   45,   42,    0,    0,   42,    0,   41,
   41,    0,    0,    0,    0,    0,    0,    0,   42,    0,
   42,   42,   42,   42,    0,   41,    0,    0,   41,    0,
    0,    0,   41,   41,   41,   41,   41,   41,   41,   46,
    0,    0,    0,    0,   41,    0,   40,    0,   83,   43,
    0,   44,    0,   42,   42,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    1,    2,    3,    4,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   42,   42,   42,    0,    0,    0,    0,
    5,    0,    0,    0,    0,    0,    6,    7,    8,    9,
   10,   11,   12,   13,   98,   99,   14,   15,   16,   17,
    0,   18,   19,   20,   21,   22,   23,   24,   25,   26,
    0,   28,    0,    0,    0,   30,   81,    0,    0,  322,
    0,  344,   45,    0,    1,    2,    3,    4,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   46,    0,    0,    0,    0,   41,    0,   40,    5,
   83,   43,    0,   44,    0,    6,    7,    8,    9,   10,
   11,   12,   13,   98,   99,   14,   15,   16,   17,    0,
   18,   19,   20,   21,   22,   23,   24,   25,   26,    0,
   28,    0,    0,    0,   30,   81,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  249,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   42,   42,   42,   42,   42,   42,
   42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
   42,   42,   46,    0,   45,    0,    0,   41,    0,   40,
  287,   83,   43,    0,   44,    0,   42,   42,    0,    0,
    0,    0,    0,    1,    2,    3,    4,    0,    0,    0,
    0,    0,    0,    0,    0,   42,    0,    0,    0,   42,
   42,    0,    0,    0,    0,   42,    0,    0,    5,    0,
    0,    0,    0,    0,    6,    7,    8,    9,   10,   11,
   12,   13,    0,    0,   14,   15,   16,   17,    0,   18,
   19,   20,   21,   22,   23,   24,   25,   26,    0,   28,
    0,   46,    0,   30,   81,    0,   41,    0,   40,    0,
   83,   43,    0,   44,    0,   45,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    1,    2,    3,    4,    0,
    0,  299,    0,   46,    0,    0,    0,    0,   41,    0,
   40,    0,   83,   43,    0,   44,    0,    0,    0,    0,
    5,    0,    0,    0,    0,    0,    6,    7,    8,    9,
   10,   11,   12,   13,   45,    0,   14,   15,   16,   17,
    0,   18,   19,   20,   21,   22,   23,   24,   25,   26,
    0,   28,    0,    0,    0,   30,   81,    0,    0,    0,
    0,    0,    0,    0,    0,   46,    0,    0,    0,    0,
   41,    0,   40,    0,   83,   43,    0,   44,    0,    0,
    0,    0,    0,    0,    0,    0,    1,    2,    3,    4,
    0,    0,    0,  322,    0,    0,   45,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    5,    0,    0,    0,    0,    0,    6,    7,    8,
    9,   10,   11,   12,   13,  329,    0,   14,   15,   16,
   17,    0,   18,   19,   20,   21,   22,   23,   24,   25,
   26,    0,   28,   46,    0,    0,   30,   81,   41,    0,
   82,    0,   83,   43,    0,   44,    0,    0,   45,    0,
    0,    0,    0,    0,    0,    1,    2,    3,    4,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    5,    0,    0,    0,    0,    0,    6,    7,    8,    9,
   10,   11,   12,   13,    0,    0,   14,   15,   16,   17,
    0,   18,   19,   20,   21,   22,   23,   24,   25,   26,
    0,   28,    0,    0,    0,   30,   81,    1,    2,    3,
    4,    0,    0,    0,    0,   46,   45,    0,    0,    0,
   41,    0,   40,    0,   83,   43,    0,   44,    0,    0,
    0,    0,    5,    0,    0,    0,    0,    0,    6,    7,
    8,    9,   10,   11,   12,   13,    0,    0,   14,   15,
   16,   17,    0,   18,   19,   20,   21,   22,   23,   24,
   25,   26,    0,   28,    0,    0,    0,   30,   81,    1,
    2,    3,    4,    0,    0,    0,   47,    0,    0,    0,
    0,   47,    0,   47,    0,   47,   47,    0,   47,    0,
    0,    0,    0,    0,    5,    0,    0,    0,    0,    0,
    6,    7,    8,    9,   10,   11,   12,   13,   45,    0,
   14,   15,   16,   17,    0,   18,   19,   20,   21,   22,
   23,   24,   25,   26,    0,   28,    0,    0,    0,   30,
   81,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    1,    2,    3,
    4,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   47,
    0,    0,    5,    0,    0,    0,    0,    0,    6,    7,
    8,    9,   10,   11,   12,   13,    0,    0,   14,   15,
   16,   17,    0,   18,   19,   20,   21,   22,   23,   24,
   25,   26,    0,   28,    0,    0,    0,   30,   81,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    1,
    2,    3,    4,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    5,    0,    0,    0,    0,    0,
    6,    7,    8,    9,   10,   11,   12,   13,    0,    0,
   14,   15,   16,   17,    0,   18,   19,   20,   21,   22,
   23,   24,   25,   26,    0,   28,    0,    0,    0,   30,
   81,   47,   47,   47,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  100,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   47,    0,    0,    0,    0,
    0,   47,   47,   47,   47,   47,   47,   47,   47,    0,
    0,   47,   47,   47,   47,    0,   47,   47,   47,   47,
   47,   47,   47,   47,   47,  100,   47,    0,    0,    0,
   47,   47,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  178,    0,    0,  178,    0,    0,  189,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  100,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  178,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  178,    0,    0,    0,    0,  243,    0,    0,    0,
    0,    0,  243,    0,    0,  243,    0,  189,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  178,  178,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  243,    0,    0,    0,
    0,    0,    0,    0,    0,  243,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  178,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  243,    0,    0,    0,  243,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  243,
};
}
static short yycheck[];
static { yycheck(); }
static void yycheck() {
yycheck = new short[] {                         40,
    0,   44,   40,   41,   40,   41,   40,   44,  106,  104,
   63,   44,  123,  123,  110,   92,  184,   58,  322,   40,
   58,  252,   58,   40,  257,   65,   42,  177,  257,   42,
   97,  226,   44,   33,   44,   35,   61,  341,   38,   44,
   40,   44,   42,   43,   40,   45,   40,   40,  198,   37,
  264,  265,   44,   91,   42,   91,   60,   91,   62,   47,
   33,   82,   35,  231,  231,   38,   58,   40,   41,   42,
   43,   44,   45,  304,   91,   62,   40,  228,  273,  100,
  325,   41,  103,   93,   44,  253,  253,    4,   43,   40,
   45,  189,  125,  244,  192,  172,  194,   91,   91,  195,
  121,  141,  142,  143,  272,  256,   40,   33,  276,  276,
  177,   38,   38,  125,   40,   41,   42,   43,   91,   45,
  125,   41,  125,  123,   44,  125,  126,   41,  325,  116,
   44,  198,   41,   41,  121,   44,   44,  305,  305,  290,
  325,  181,  310,  310,  325,  243,  257,  257,   65,  244,
  123,  138,  125,  126,  325,   41,   41,  178,   44,   44,
  311,  325,  148,  149,  150,  151,   41,   41,  325,   44,
   44,  268,  269,   61,   62,  144,  145,  124,  146,  147,
  152,  153,   94,  270,   33,  123,   35,  257,   37,   44,
  318,   40,   41,   42,   43,   44,   45,   46,   47,  257,
  126,   44,  257,   44,   41,   44,  257,  259,   44,   58,
  123,   60,   61,   62,   63,   41,  257,  204,  271,  257,
  257,  257,   42,  257,  141,  142,  143,  144,  145,  146,
  147,  148,  149,  150,  151,  152,  153,  154,  155,  156,
  157,  158,   91,  259,   93,   94,  259,  272,  273,  274,
  275,  276,  277,  278,  279,  280,  281,  257,  258,  259,
  260,  257,  266,  267,  181,   61,   40,  184,  257,  312,
   42,   41,  257,   44,  123,  124,  125,  126,  321,  322,
  323,  324,  282,   41,  257,  258,  259,  260,  288,  289,
  290,  291,  292,  293,  294,  295,   93,   44,  298,  299,
  300,  301,   61,  303,  304,  305,  306,  307,  308,  309,
  310,  311,  312,  313,  231,  315,  303,  317,  318,  319,
  320,  321,  322,  323,  324,  325,   58,   44,   41,   93,
   41,  257,  258,  259,  260,  322,  253,  316,   41,  312,
  313,   93,  315,    0,  317,  318,  319,  320,  321,  322,
  323,  324,  257,   41,  341,  272,  282,   41,  325,  276,
   32,   48,  288,  289,  290,  291,  292,  293,  294,  295,
  121,  154,  298,  299,  300,  301,   82,  303,  304,  305,
  306,  307,  308,  309,  310,  311,  155,  313,  305,  156,
  158,  317,  318,  310,  157,  194,  302,  225,  163,  325,
   40,  311,  232,  294,  194,   -1,   -1,   -1,  257,  258,
  259,  260,  261,  262,  263,  264,  265,  266,  267,  268,
  269,  270,  271,  272,  273,  274,  275,  276,  277,  278,
  279,  280,  281,  282,  106,   -1,   -1,   -1,   -1,  288,
  289,  290,  291,  292,  293,  294,  295,  296,  297,  298,
  299,  300,  301,   -1,  303,  304,  305,  306,  307,  308,
  309,  310,  311,  312,  313,   -1,  315,   -1,  317,  318,
  319,  320,  321,  322,  323,  324,  325,   33,   -1,   35,
   -1,   37,   38,   -1,   40,   41,   42,   43,   44,   45,
   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  106,   -1,   58,   -1,   60,   61,   62,   63,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  193,  194,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   91,   -1,   93,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   35,   -1,
   37,   38,   -1,   40,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,  235,  236,   -1,   -1,  123,  124,  125,
  126,   58,   -1,   60,   61,   62,   63,  183,   -1,   -1,
   -1,   -1,   -1,  189,   -1,   -1,  192,   -1,  194,   -1,
   -1,   -1,   -1,   -1,  266,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   91,   -1,   93,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  287,   -1,  257,  258,  259,
   -1,   -1,   -1,   40,   41,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  123,  243,  125,  126,
  312,   -1,  282,  315,   -1,   -1,  252,   -1,  288,  289,
  290,  291,  292,  293,  294,  295,   -1,   -1,  298,  299,
  300,  301,   -1,  303,  304,  305,  306,  307,  308,  309,
  310,  311,   -1,  313,   91,   -1,   -1,  317,  318,   -1,
   -1,   -1,   -1,   -1,  290,   -1,   -1,   -1,  294,   -1,
   -1,   -1,   -1,   41,   -1,   -1,   -1,   -1,  304,   -1,
   -1,  257,  258,  259,  260,  261,  262,  263,  264,  265,
  266,  267,  268,  269,  270,  271,  272,  273,  274,  275,
  276,  277,  278,  279,  280,  281,  282,   -1,   -1,   -1,
   -1,   -1,  288,  289,  290,  291,  292,  293,  294,  295,
  296,  297,  298,  299,  300,  301,   -1,  303,  304,  305,
  306,  307,  308,  309,  310,  311,  312,  313,   44,  315,
   -1,  317,  318,  319,  320,  321,  322,  323,  324,  325,
  257,  258,  259,  260,  261,  262,  263,  264,  265,  266,
  267,  268,  269,  270,  271,  272,  273,  274,  275,  276,
  277,  278,  279,  280,  281,  282,   -1,   -1,   -1,   -1,
   -1,  288,  289,  290,  291,  292,  293,  294,  295,  296,
  297,  298,  299,  300,  301,   -1,  303,  304,  305,  306,
  307,  308,  309,  310,  311,  312,  313,   -1,  315,   -1,
  317,  318,  319,  320,  321,  322,  323,  324,  325,   33,
  257,   35,   -1,   37,   38,   -1,   40,   41,   42,   43,
   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   58,  282,   60,   61,   62,   63,
   -1,  288,  289,  290,  291,  292,  293,  294,  295,  296,
  297,  298,  299,  300,  301,   -1,  303,  304,  305,  306,
  307,  308,  309,  310,  311,   -1,   -1,   91,   -1,   93,
   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,  257,
   35,   -1,   37,   38,   -1,   40,   41,   42,   43,   44,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,  123,
  124,  125,  126,   58,  282,   60,   61,   62,   63,   -1,
  288,  289,  290,  291,  292,  293,  294,  295,  296,  297,
  298,  299,  300,  301,   -1,  303,  304,  305,  306,  307,
  308,  309,  310,  311,   -1,   -1,   91,   -1,   93,   94,
   -1,  257,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   40,   41,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  282,   -1,   -1,  124,
  125,  126,  288,  289,  290,  291,  292,  293,  294,  295,
  296,  297,  298,  299,  300,  301,   -1,  303,  304,  305,
  306,  307,  308,  309,  310,  311,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   41,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  257,  258,  259,  260,  261,  262,  263,
  264,  265,  266,  267,  268,  269,   -1,  271,  272,  273,
  274,  275,  276,  277,  278,  279,  280,  281,  282,   -1,
   -1,   -1,   -1,   -1,  288,  289,  290,  291,  292,  293,
  294,  295,  296,  297,  298,  299,  300,  301,   -1,  303,
  304,  305,  306,  307,  308,  309,  310,  311,  312,  313,
   -1,  315,   -1,  317,  318,  319,  320,  321,  322,  323,
  324,  325,  257,  258,  259,  260,  261,  262,  263,  264,
  265,  266,  267,  268,  269,  270,  271,  272,  273,  274,
  275,  276,  277,  278,  279,  280,  281,  282,   -1,   -1,
   -1,   -1,   -1,  288,  289,  290,  291,  292,  293,  294,
  295,  296,  297,  298,  299,  300,  301,   -1,  303,  304,
  305,  306,  307,  308,  309,  310,  311,  312,  313,   -1,
  315,   -1,  317,  318,  319,  320,  321,  322,  323,  324,
  325,   33,  125,   35,   -1,   37,   38,   -1,   40,   41,
   42,   43,   -1,   45,   46,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   58,  282,   60,   61,
   62,   63,  125,  288,  289,  290,  291,  292,  293,  294,
  295,  296,  297,  298,  299,  300,  301,   -1,  303,  304,
  305,  306,  307,  308,  309,  310,  311,   -1,   -1,   91,
   -1,   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   33,   -1,   35,   -1,   37,   38,   -1,   40,   41,   42,
   43,   -1,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,  123,  124,  125,  126,   58,  282,   60,   61,   62,
   63,   -1,  288,  289,  290,  291,  292,  293,  294,  295,
  296,  297,  298,  299,  300,  301,   -1,  303,  304,  305,
  306,  307,  308,  309,  310,  311,  282,   -1,   91,   -1,
   93,   94,  288,  289,  290,  291,  292,  293,  294,  295,
  296,  297,  298,  299,  300,  301,  302,  303,  304,  305,
  306,  307,  308,  309,  310,  311,   -1,   -1,   -1,  282,
  123,  124,  125,  126,   -1,  288,  289,  290,  291,  292,
  293,  294,  295,  296,  297,  298,  299,  300,  301,   -1,
  303,  304,  305,  306,  307,  308,  309,  310,  311,  282,
   -1,   -1,   -1,   -1,   -1,  288,  289,  290,  291,  292,
  293,  294,  295,  296,  297,  298,  299,  300,  301,   -1,
  303,  304,  305,  306,  307,  308,  309,  310,  311,   -1,
   -1,   -1,   -1,   -1,   -1,  257,  258,  259,  260,  261,
  262,  263,  264,  265,  266,  267,  268,  269,  270,  271,
  272,  273,  274,  275,  276,  277,  278,  279,  280,  281,
  282,   -1,   -1,   -1,   -1,   -1,  288,  289,  290,  291,
  292,  293,  294,  295,  296,  297,  298,  299,  300,  301,
   -1,  303,  304,  305,  306,  307,  308,  309,  310,  311,
  312,  313,   -1,  315,   -1,  317,  318,  319,  320,  321,
  322,  323,  324,  325,  257,  258,  259,  260,  261,  262,
  263,  264,  265,  266,  267,  268,  269,  270,  271,  272,
  273,  274,  275,  276,  277,  278,  279,  280,  281,  282,
   -1,   -1,   -1,   -1,   -1,  288,  289,  290,  291,  292,
  293,  294,  295,  296,  297,  298,  299,  300,  301,   -1,
  303,  304,  305,  306,  307,  308,  309,  310,  311,  312,
  313,   -1,  315,   -1,  317,  318,  319,  320,  321,  322,
  323,  324,  325,   33,   35,   35,   37,   37,   38,   40,
   40,   41,   42,   43,  125,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   -1,
   60,   61,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   82,   -1,   -1,   -1,   -1,   -1,   -1,   89,   90,
   -1,   91,   -1,   93,   94,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   33,   -1,   35,   -1,   37,   38,   -1,   40,
   41,   42,   43,   -1,   45,   46,   47,   -1,   -1,   -1,
  121,  122,   -1,  123,  124,  125,  126,   58,  282,   60,
   61,   62,   63,   -1,  288,  289,  290,  291,  292,  293,
  294,  295,  296,  297,  298,  299,  300,  301,   -1,  303,
  304,  305,  306,  307,  308,  309,  310,  311,  159,  282,
   91,   -1,   93,   94,   -1,  288,  289,  290,  291,  292,
  293,  294,  295,   -1,  175,  298,  299,  300,  301,   -1,
  303,  304,  305,  306,  307,  308,  309,  310,  311,   -1,
   -1,   -1,  123,  124,  125,  126,   -1,   -1,   -1,   -1,
   -1,  282,   -1,   -1,   -1,   -1,   -1,  288,  289,  290,
  291,  292,  293,  294,  295,  296,  297,  298,  299,  300,
  301,   -1,  303,  304,  305,  306,  307,  308,  309,  310,
  311,   -1,   -1,   -1,   -1,   -1,  237,  238,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,
  260,  261,  262,  263,  264,  265,  266,  267,  268,  269,
  270,  271,  272,  273,  274,  275,  276,  277,  278,  279,
  280,  281,  282,   -1,   -1,   -1,   -1,   -1,  288,  289,
  290,  291,  292,  293,  294,  295,  296,  297,  298,  299,
  300,  301,   -1,  303,  304,  305,  306,  307,  308,  309,
  310,  311,  312,  313,   -1,  315,   -1,  317,  318,  319,
  320,  321,  322,  323,  324,  325,  257,  258,  259,  260,
  261,  262,  263,  264,  265,  266,  267,  268,  269,  270,
  271,  272,  273,  274,  275,  276,  277,  278,  279,  280,
  281,  282,   -1,   -1,   -1,   -1,   -1,  288,  289,  290,
  291,  292,  293,  294,  295,  296,  297,  298,  299,  300,
  301,   -1,  303,  304,  305,  306,  307,  308,  309,  310,
  311,  312,  313,   -1,  315,   -1,  317,  318,  319,  320,
  321,  322,  323,  324,  325,   33,   -1,   35,   -1,   37,
   38,   -1,   40,   41,   42,   43,   44,   45,   46,   47,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   58,   -1,   60,   61,   62,   63,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   91,   -1,   93,   94,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   33,   -1,   35,   -1,   37,   -1,
   -1,   40,   41,   42,   43,   44,   45,   46,   47,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  124,  125,  126,   58,
   -1,   60,   61,   62,   63,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   91,   -1,   93,   94,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  123,  124,  125,  126,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,
  258,  259,  260,  261,  262,  263,  264,  265,  266,  267,
  268,  269,  270,  271,  272,  273,  274,  275,  276,  277,
  278,  279,  280,  281,  282,   -1,   -1,   -1,   -1,   -1,
  288,  289,  290,  291,  292,  293,  294,  295,  296,  297,
  298,  299,  300,  301,   -1,  303,  304,  305,  306,  307,
  308,  309,  310,  311,  312,  313,   -1,  315,   -1,  317,
  318,  319,  320,  321,  322,  323,  324,  325,  257,  258,
  259,  260,  261,  262,  263,  264,  265,  266,  267,  268,
  269,  270,  271,  272,  273,  274,  275,  276,  277,  278,
  279,  280,  281,  282,   -1,   -1,   -1,   -1,   -1,  288,
  289,  290,  291,  292,  293,  294,  295,  296,  297,  298,
  299,  300,  301,   -1,  303,  304,  305,  306,  307,  308,
  309,  310,  311,  312,  313,   -1,  315,   -1,  317,  318,
  319,  320,  321,  322,  323,  324,  325,   33,   -1,   35,
   -1,   37,   38,   -1,   40,   41,   42,   43,   44,   45,
   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   58,   -1,   60,   61,   62,   63,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   91,   -1,   93,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   35,   -1,
   37,   38,   -1,   40,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,  125,
  126,   58,   -1,   60,   61,   62,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   91,   -1,   93,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  123,   -1,  125,  126,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  257,  258,  259,  260,  261,  262,  263,  264,  265,
  266,  267,  268,  269,  270,  271,  272,  273,  274,  275,
  276,  277,  278,  279,  280,  281,  282,   -1,   -1,   -1,
   -1,   -1,  288,  289,  290,  291,  292,  293,  294,  295,
  296,  297,  298,  299,  300,  301,   -1,  303,  304,  305,
  306,  307,  308,  309,  310,  311,  312,  313,   -1,  315,
   -1,  317,  318,  319,  320,  321,  322,  323,  324,  325,
  257,  258,  259,  260,  261,  262,  263,  264,  265,  266,
  267,  268,  269,  270,  271,  272,  273,  274,  275,  276,
  277,  278,  279,  280,  281,  282,   -1,   -1,   -1,   -1,
   -1,  288,  289,  290,  291,  292,  293,  294,  295,  296,
  297,  298,  299,  300,  301,   -1,  303,  304,  305,  306,
  307,  308,  309,  310,  311,  312,  313,   -1,  315,   -1,
  317,  318,  319,  320,  321,  322,  323,  324,  325,   33,
   -1,   35,   -1,   37,   38,   -1,   40,   41,   42,   43,
   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   58,   -1,   60,   61,   62,   63,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   93,
   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,
   35,   -1,   37,   38,   -1,   40,   41,   42,   43,   -1,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,  123,
  124,  125,  126,   58,   -1,   60,   61,   62,   63,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   93,   94,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,
  125,  126,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  257,  258,  259,  260,  261,  262,  263,
  264,  265,  266,  267,  268,  269,   -1,  271,  272,  273,
  274,  275,  276,  277,  278,  279,  280,  281,  282,   -1,
   -1,   -1,   -1,   -1,  288,  289,  290,  291,  292,  293,
  294,  295,  296,  297,  298,  299,  300,  301,   -1,  303,
  304,  305,  306,  307,  308,  309,  310,  311,  312,  313,
   -1,  315,   -1,  317,  318,  319,  320,  321,  322,  323,
  324,  325,   44,  258,  259,  260,  261,  262,  263,  264,
  265,  266,  267,  268,  269,  270,  271,  272,  273,  274,
  275,  276,  277,  278,  279,  280,  281,  282,   -1,   -1,
   -1,   -1,   -1,  288,  289,  290,  291,  292,  293,  294,
  295,  296,  297,  298,  299,  300,  301,   -1,  303,  304,
  305,  306,  307,  308,  309,  310,  311,  312,  313,   -1,
  315,   -1,  317,  318,  319,  320,  321,  322,  323,  324,
  325,   33,   -1,   35,   -1,   37,   38,   -1,   40,   41,
   42,   -1,   44,  125,   46,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   58,   -1,   60,   61,
   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,
   -1,   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   33,   -1,   35,   -1,   37,   38,   -1,   40,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,  123,  124,  125,  126,   58,   -1,   60,   61,   62,
   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,
   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  123,  124,  125,  126,   -1,   -1,   -1,   -1,   -1,   -1,
  282,   -1,   -1,   -1,   -1,   -1,  288,  289,  290,  291,
  292,  293,  294,  295,  296,  297,  298,  299,  300,  301,
   -1,  303,  304,  305,  306,  307,  308,  309,  310,  311,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  257,  258,  259,  260,  261,
  262,  263,  264,  265,  266,  267,  268,  269,  270,  271,
  272,  273,  274,  275,  276,  277,  278,  279,  280,  281,
  282,   -1,   -1,   -1,   -1,   -1,  288,  289,  290,  291,
  292,  293,  294,  295,  296,  297,  298,  299,  300,  301,
   -1,  303,  304,  305,  306,  307,  308,  309,  310,  311,
  312,  313,   -1,  315,   -1,  317,  318,  319,  320,  321,
  322,  323,  324,  325,  257,  258,  259,  260,  261,  262,
  263,   -1,   -1,  266,  267,  268,  269,  270,  271,  272,
  273,  274,  275,  276,  277,  278,  279,  280,  281,  282,
   -1,   -1,   -1,   -1,   -1,  288,  289,  290,  291,  292,
  293,  294,  295,  296,  297,  298,  299,  300,  301,   -1,
  303,  304,  305,  306,  307,  308,  309,  310,  311,  312,
  313,   -1,  315,   -1,  317,  318,  319,  320,  321,  322,
  323,  324,  325,   33,   -1,   35,   -1,   37,   38,   -1,
   40,   41,   42,   43,   44,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   -1,
   60,   61,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   91,   -1,   93,   94,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   33,   -1,   35,   -1,   37,   38,   -1,   40,
   41,   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,
   -1,   -1,   -1,  123,  124,  125,  126,   58,   -1,   60,
   61,   62,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   91,   -1,   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  123,  124,  125,  126,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,
  260,  261,  262,  263,  264,  265,  266,  267,   -1,   -1,
  270,  271,  272,  273,  274,  275,  276,  277,  278,  279,
  280,  281,  282,   -1,   -1,   -1,   -1,   -1,  288,  289,
  290,  291,  292,  293,  294,  295,  296,  297,  298,  299,
  300,  301,   -1,  303,  304,  305,  306,  307,  308,  309,
  310,  311,  312,  313,   -1,  315,   -1,  317,  318,  319,
  320,  321,  322,  323,  324,  325,  257,  258,  259,  260,
  261,  262,  263,  264,  265,  266,  267,  268,  269,  270,
   -1,  272,  273,  274,  275,  276,  277,  278,  279,  280,
  281,  282,   -1,   -1,   -1,   -1,   -1,  288,  289,  290,
  291,  292,  293,  294,  295,  296,  297,  298,  299,  300,
  301,   -1,  303,  304,  305,  306,  307,  308,  309,  310,
  311,  312,  313,   -1,  315,   -1,  317,  318,  319,  320,
  321,  322,  323,  324,  325,   33,   -1,   35,   -1,   37,
   38,   -1,   40,   41,   42,   -1,   44,   -1,   46,   47,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   58,   -1,   60,   61,   62,   63,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   91,   -1,   93,   94,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   33,   -1,   35,   -1,   37,   38,
   -1,   40,   41,   42,   -1,   44,   -1,   46,   47,   -1,
   -1,   -1,   -1,   -1,   -1,  123,  124,  125,  126,   58,
   -1,   60,   61,   62,   63,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   91,   -1,   93,   94,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  123,  124,  125,  126,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,
  258,  259,  260,  261,  262,  263,  264,  265,  266,  267,
  268,  269,  270,  271,  272,  273,  274,  275,  276,  277,
  278,  279,  280,  281,  282,   -1,   -1,   -1,   -1,   -1,
  288,  289,  290,  291,  292,  293,  294,  295,  296,  297,
  298,  299,  300,  301,   -1,  303,  304,  305,  306,  307,
  308,  309,  310,  311,  312,  313,   -1,  315,   -1,  317,
  318,  319,  320,  321,  322,  323,  324,  325,  257,  258,
  259,  260,  261,  262,  263,  264,  265,  266,  267,  268,
  269,  270,  271,  272,  273,  274,  275,  276,  277,  278,
  279,  280,  281,  282,   -1,   -1,   -1,   -1,   -1,  288,
  289,  290,  291,  292,  293,  294,  295,  296,  297,  298,
  299,  300,  301,   -1,  303,  304,  305,  306,  307,  308,
  309,  310,  311,  312,  313,   -1,  315,   -1,  317,  318,
  319,  320,  321,  322,  323,  324,  325,   33,   -1,   35,
   -1,   37,   38,   -1,   40,   41,   42,   43,   44,   45,
   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   58,   -1,   60,   61,   62,   63,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   91,   -1,   93,   94,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   35,   -1,
   37,   38,   -1,   40,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,  125,
  126,   58,   -1,   60,   61,   62,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   91,   -1,   93,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,  125,  126,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  257,  258,  259,  260,  261,  262,  263,   -1,   -1,
  266,  267,  268,  269,  270,  271,  272,  273,  274,  275,
  276,  277,  278,  279,  280,  281,  282,   -1,   -1,   -1,
   -1,   -1,  288,  289,  290,  291,  292,  293,  294,  295,
  296,  297,  298,  299,  300,  301,   -1,  303,  304,  305,
  306,  307,  308,  309,  310,  311,  312,  313,   -1,  315,
   -1,  317,  318,  319,  320,  321,  322,  323,  324,  325,
  257,  258,  259,  260,  261,  262,  263,   -1,   -1,  266,
  267,  268,  269,  270,  271,  272,  273,  274,  275,  276,
  277,  278,  279,  280,  281,  282,   -1,   -1,   -1,   -1,
   -1,  288,  289,  290,  291,  292,  293,  294,  295,  296,
  297,  298,  299,  300,  301,   -1,  303,  304,  305,  306,
  307,  308,  309,  310,  311,  312,  313,   -1,  315,   -1,
  317,  318,  319,  320,  321,  322,  323,  324,  325,   33,
   -1,   35,   -1,   37,   38,   -1,   40,   41,   42,   43,
   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   58,   -1,   60,   61,   62,   63,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   93,
   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,
   35,   -1,   37,   38,   -1,   40,   41,   42,   43,   44,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,  123,
  124,  125,  126,   58,   -1,   60,   61,   62,   63,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   93,   94,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,
  125,  126,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  257,  258,  259,  260,  261,  262,  263,
   -1,   -1,  266,  267,  268,  269,  270,  271,  272,  273,
  274,  275,  276,  277,  278,  279,  280,  281,  282,   -1,
   -1,   -1,   -1,   -1,  288,  289,  290,  291,  292,  293,
  294,  295,  296,  297,  298,  299,  300,  301,   -1,  303,
  304,  305,  306,  307,  308,  309,  310,  311,  312,  313,
   -1,  315,   -1,  317,  318,  319,  320,  321,  322,  323,
  324,  325,  257,  258,  259,  260,  261,  262,  263,   -1,
   -1,  266,  267,  268,  269,  270,  271,  272,  273,  274,
  275,  276,  277,  278,  279,  280,  281,  282,   -1,   -1,
   -1,   -1,   -1,  288,  289,  290,  291,  292,  293,  294,
  295,  296,  297,  298,  299,  300,  301,   -1,  303,  304,
  305,  306,  307,  308,  309,  310,  311,  312,  313,   -1,
  315,   -1,  317,  318,  319,  320,  321,  322,  323,  324,
  325,   33,   -1,   35,   -1,   37,   38,   -1,   40,   41,
   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   58,   -1,   60,   61,
   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,
   -1,   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   33,   -1,   35,   -1,   -1,   38,   -1,   40,   41,   -1,
   43,   44,   45,   46,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  123,  124,  125,  126,   58,   -1,   60,   61,   62,
   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,
   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  123,  124,  125,  126,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  257,  258,  259,  260,  261,
  262,  263,  264,  265,  266,  267,   -1,   -1,  270,  271,
  272,  273,  274,  275,  276,  277,  278,  279,  280,  281,
  282,   -1,   -1,   -1,   -1,   -1,  288,  289,  290,  291,
  292,  293,  294,  295,  296,  297,  298,  299,  300,  301,
   -1,  303,  304,  305,  306,  307,  308,  309,  310,  311,
  312,  313,   -1,  315,   -1,  317,  318,  319,  320,  321,
  322,  323,  324,  325,  257,  258,  259,  260,  261,  262,
  263,  264,  265,  266,  267,  268,  269,  270,  271,  272,
  273,  274,  275,  276,  277,  278,  279,  280,  281,  282,
   -1,   -1,   -1,   -1,   -1,  288,  289,  290,  291,  292,
  293,  294,  295,  296,  297,  298,  299,  300,  301,   -1,
  303,  304,  305,  306,  307,  308,  309,  310,  311,  312,
  313,   -1,  315,   -1,  317,  318,  319,  320,  321,  322,
  323,  324,  325,   33,   -1,   35,   -1,   -1,   38,   -1,
   40,   41,   -1,   43,   44,   45,   46,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   -1,
   60,   61,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   91,   -1,   93,   94,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   33,   -1,   35,   -1,   -1,   38,   -1,   40,
   41,   -1,   43,   44,   45,   46,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  123,  124,  125,  126,   58,   -1,   60,
   61,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   91,   -1,   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  123,  124,  125,  126,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,
  260,  261,  262,  263,  264,  265,  266,  267,  268,  269,
  270,  271,  272,  273,  274,  275,  276,  277,  278,  279,
  280,  281,  282,   -1,   -1,   -1,   -1,   -1,  288,  289,
  290,  291,  292,  293,  294,  295,  296,  297,  298,  299,
  300,  301,   -1,  303,  304,  305,  306,  307,  308,  309,
  310,  311,  312,  313,   -1,  315,   -1,  317,  318,  319,
  320,  321,  322,  323,  324,  325,  257,  258,  259,  260,
  261,  262,  263,  264,  265,  266,  267,  268,  269,  270,
  271,  272,  273,  274,  275,  276,  277,  278,  279,  280,
  281,  282,   -1,   -1,   -1,   -1,   -1,  288,  289,  290,
  291,  292,  293,  294,  295,  296,  297,  298,  299,  300,
  301,   -1,  303,  304,  305,  306,  307,  308,  309,  310,
  311,  312,  313,   -1,  315,   -1,  317,  318,  319,  320,
  321,  322,  323,  324,  325,   33,   -1,   35,   -1,   37,
   38,   -1,   40,   41,   42,   43,   44,   45,   46,   47,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   58,   -1,   -1,   61,   -1,   63,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   91,   -1,   93,   94,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   33,   -1,   35,   -1,   37,   38,
   -1,   40,   41,   42,   43,   44,   45,   46,   47,   -1,
   -1,   -1,   -1,   -1,   -1,  123,  124,  125,  126,   58,
   -1,   -1,   61,   -1,   63,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   91,   -1,   93,   94,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  123,  124,  125,  126,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,
  258,  259,  260,  261,  262,  263,  264,  265,   -1,   -1,
  268,  269,  270,  271,  272,  273,  274,  275,  276,  277,
  278,  279,  280,  281,  282,   -1,   -1,   -1,   -1,   -1,
  288,  289,  290,  291,  292,  293,  294,  295,  296,  297,
  298,  299,  300,  301,   -1,  303,  304,  305,  306,  307,
  308,  309,  310,  311,  312,  313,   -1,  315,   -1,  317,
  318,  319,  320,  321,  322,  323,  324,  325,  257,  258,
  259,  260,  261,  262,  263,  264,  265,   -1,   -1,  268,
  269,  270,  271,  272,  273,  274,  275,  276,  277,  278,
  279,  280,  281,  282,   -1,   -1,   -1,   -1,   -1,  288,
  289,  290,  291,  292,  293,  294,  295,  296,  297,  298,
  299,  300,  301,   -1,  303,  304,  305,  306,  307,  308,
  309,  310,  311,  312,  313,   -1,  315,   -1,  317,  318,
  319,  320,  321,  322,  323,  324,  325,   33,   -1,   35,
   -1,   37,   38,   -1,   40,   41,   42,   43,   44,   45,
   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   58,   -1,   -1,   61,   -1,   63,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   91,   -1,   93,   94,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   35,   -1,
   37,   38,   -1,   40,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,  125,
  126,   58,   -1,   60,   -1,   62,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   91,   -1,   93,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,  125,  126,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  257,  258,  259,  260,  261,  262,  263,  264,  265,
   -1,   -1,  268,  269,  270,  271,  272,  273,  274,  275,
  276,  277,  278,  279,  280,  281,  282,   -1,   -1,   -1,
   -1,   -1,  288,  289,  290,  291,  292,  293,  294,  295,
  296,  297,  298,  299,  300,  301,   -1,  303,  304,  305,
  306,  307,  308,  309,  310,  311,  312,  313,   -1,  315,
   -1,  317,  318,  319,  320,  321,  322,  323,  324,  325,
  257,  258,  259,  260,  261,  262,  263,  264,  265,  266,
  267,  268,  269,  270,  271,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  282,   -1,   -1,   -1,   -1,
   -1,  288,  289,  290,  291,  292,  293,  294,  295,  296,
  297,  298,  299,  300,  301,   -1,  303,  304,  305,  306,
  307,  308,  309,  310,  311,  312,  313,   -1,  315,   -1,
  317,  318,  319,  320,  321,  322,  323,  324,  325,   33,
   -1,   -1,   -1,   37,   38,   -1,   -1,   -1,   42,   43,
   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   60,   61,   62,   63,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,
   94,   -1,   -1,   -1,   -1,   -1,   33,   -1,   35,   -1,
   37,   38,   -1,   -1,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  124,   58,  126,   60,   61,   62,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   91,   -1,   93,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,  125,  126,
   33,   -1,   35,   -1,   37,   38,   -1,   40,   -1,   42,
   43,   -1,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,   61,   62,
   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,
   -1,   94,   -1,  257,  258,  259,  260,  261,  262,  263,
  264,  265,  266,  267,  268,  269,  270,  271,  272,  273,
  274,  275,  276,  277,  278,  279,  280,  281,  282,   -1,
  123,  124,  125,  126,  288,  289,  290,  291,  292,  293,
  294,  295,   -1,   -1,  298,  299,  300,  301,   -1,  303,
  304,  305,  306,  307,  308,  309,  310,  311,  312,  313,
   -1,   -1,   -1,  317,  318,   -1,   -1,  321,  322,  323,
  324,  325,   -1,  260,  261,  262,  263,  264,  265,  266,
  267,  268,  269,  270,  271,  272,  273,  274,  275,  276,
  277,  278,  279,  280,  281,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   35,  296,
  297,   38,   -1,   40,   -1,   42,   43,   -1,   45,   -1,
   -1,   -1,   -1,   -1,   -1,  312,   -1,   -1,  315,   -1,
   -1,   -1,  319,  320,  321,  322,  323,  324,  325,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  258,  259,  260,  261,  262,
  263,  264,  265,  266,  267,  268,  269,  270,  271,  272,
  273,  274,  275,  276,  277,  278,  279,  280,  281,   -1,
   -1,   -1,   -1,   33,   -1,   35,  123,   -1,   38,  126,
   -1,   41,   42,   43,   44,   45,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,  312,
  313,   61,  315,   -1,  317,  318,  319,  320,  321,  322,
  323,  324,  325,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   33,   -1,   -1,   -1,   37,   38,   -1,   40,   41,   42,
   43,   -1,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  123,   -1,  125,  126,   60,   61,   62,
   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,
   -1,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  257,  258,  259,  260,   33,   -1,   35,   -1,   -1,   38,
   -1,   40,   -1,   42,   43,   44,   45,   -1,   -1,   -1,
   -1,  124,   -1,  126,   -1,  282,   -1,   -1,   -1,   -1,
   -1,  288,  289,  290,  291,  292,  293,  294,  295,   -1,
   -1,  298,  299,  300,  301,   -1,  303,  304,  305,  306,
  307,  308,  309,  310,  311,  312,  313,   -1,  315,   -1,
  317,  318,  319,  320,  321,  322,  323,  324,  325,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,
  260,   -1,   -1,   33,  123,   35,  125,  126,   38,   -1,
   40,   -1,   42,   43,   -1,   45,   -1,   -1,   -1,   -1,
   -1,   -1,  282,   -1,   -1,   -1,   -1,   -1,  288,  289,
  290,  291,  292,  293,  294,  295,  296,  297,  298,  299,
  300,  301,   -1,  303,  304,  305,  306,  307,  308,  309,
  310,  311,  312,  313,   -1,  315,   -1,  317,  318,  319,
  320,  321,  322,  323,  324,  258,  259,  260,  261,  262,
  263,  264,  265,  266,  267,  268,  269,  270,  271,  272,
  273,  274,  275,  276,  277,  278,  279,  280,  281,   -1,
   -1,   -1,   -1,  123,   -1,  125,  126,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  312,
  313,   -1,   -1,   -1,  317,  318,   -1,   -1,  321,  322,
  323,  324,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,
  259,  260,   33,   -1,   35,   -1,   -1,   38,   -1,   40,
   -1,   42,   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  282,   -1,   -1,   -1,   -1,   -1,  288,
  289,  290,  291,  292,  293,  294,  295,  296,  297,  298,
  299,  300,  301,   -1,  303,  304,  305,  306,  307,  308,
  309,  310,  311,  312,  313,   -1,  315,   -1,  317,  318,
  319,  320,  321,  322,  323,  324,   -1,   -1,   -1,   -1,
   33,   -1,   35,   -1,   -1,   38,   -1,   40,   -1,   42,
   43,   -1,   45,   -1,   -1,   -1,   -1,  257,  258,  259,
  260,   -1,  123,   -1,  125,  126,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  282,   -1,   -1,   -1,   -1,   -1,  288,  289,
  290,  291,  292,  293,  294,  295,  296,  297,  298,  299,
  300,  301,   -1,  303,  304,  305,  306,  307,  308,  309,
  310,  311,  312,  313,   -1,  315,   -1,  317,  318,  319,
  320,  321,  322,  323,  324,   -1,   -1,   -1,   -1,   -1,
  123,   -1,  125,  126,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,
   35,   -1,   -1,   38,   -1,   40,   -1,   42,   43,   -1,
   45,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,  260,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  282,   -1,   -1,   -1,   -1,   -1,  288,  289,  290,
  291,  292,  293,  294,  295,  296,  297,  298,  299,  300,
  301,   -1,  303,  304,  305,  306,  307,  308,  309,  310,
  311,  312,  313,   -1,  315,   -1,  317,  318,  319,  320,
  321,  322,  323,  324,  257,  258,  259,  260,  123,   -1,
  125,  126,   33,   -1,   35,   -1,   -1,   38,   -1,   40,
   -1,   42,   43,   -1,   45,   -1,   -1,   -1,   -1,  282,
   -1,   -1,   -1,   -1,   -1,  288,  289,  290,  291,  292,
  293,  294,  295,  296,  297,  298,  299,  300,  301,   -1,
  303,  304,  305,  306,  307,  308,  309,  310,  311,  312,
  313,   -1,  315,   -1,  317,  318,  319,  320,  321,  322,
  323,  324,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,
   -1,   35,   -1,   -1,   38,   -1,   -1,   -1,   42,   43,
   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  123,   -1,  125,  126,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  257,  258,  259,  260,   -1,   -1,   -1,   -1,
   33,   -1,   35,   -1,   -1,   38,   -1,   40,   -1,   42,
   43,   -1,   45,   -1,   -1,   -1,   -1,  282,   -1,  123,
   -1,  125,  126,  288,  289,  290,  291,  292,  293,  294,
  295,   -1,   -1,  298,  299,  300,  301,   -1,  303,  304,
  305,  306,  307,  308,  309,  310,  311,  312,  313,   -1,
  315,   -1,  317,  318,  319,  320,  321,  322,  323,  324,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,
   -1,   -1,   -1,   38,   -1,   40,   -1,   42,   43,   -1,
   45,   46,   -1,   -1,   -1,   -1,  257,  258,  259,  260,
  123,   -1,   -1,  126,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  282,   -1,   -1,   -1,   -1,   -1,  288,  289,  290,
  291,  292,  293,  294,  295,   -1,   91,  298,  299,  300,
  301,   -1,  303,  304,  305,  306,  307,  308,  309,  310,
  311,  312,  313,   -1,  315,   -1,  317,  318,  319,  320,
  321,  322,  323,  324,  258,  259,  260,   -1,   -1,   -1,
   -1,  126,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  282,   -1,
   -1,   -1,   -1,   -1,  288,  289,  290,  291,  292,  293,
  294,  295,  296,  297,  298,  299,  300,  301,   -1,  303,
  304,  305,  306,  307,  308,  309,  310,  311,  312,  313,
   -1,  315,   -1,  317,  318,  319,  320,  321,  322,  323,
  324,   -1,   -1,   -1,  257,  258,  259,  260,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  282,
   -1,   -1,   -1,   -1,   -1,  288,  289,  290,  291,  292,
  293,  294,  295,   -1,   -1,  298,  299,  300,  301,   -1,
  303,  304,  305,  306,  307,  308,  309,  310,  311,  312,
  313,   -1,  315,   -1,  317,  318,  319,  320,  321,  322,
  323,  324,  257,  258,  259,  260,  261,  262,  263,   -1,
   -1,   -1,   33,   -1,   35,   -1,   -1,   38,   -1,   40,
   41,   42,   43,   44,   45,   -1,   -1,  282,   -1,   -1,
   -1,   -1,   -1,  288,  289,  290,  291,  292,  293,  294,
  295,   -1,   -1,  298,  299,  300,  301,   -1,  303,  304,
  305,  306,  307,  308,  309,  310,  311,  312,  313,   -1,
   -1,   -1,  317,  318,   -1,   -1,  321,  322,  323,  324,
   91,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   35,   -1,   37,   -1,   -1,   -1,   41,
   -1,   -1,   44,   -1,   46,   47,   -1,   -1,   -1,   -1,
   -1,   -1,  123,   -1,  125,  126,   58,   -1,   60,   61,
   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,
   -1,   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   35,   -1,   37,   -1,   -1,   -1,   41,   -1,
   -1,   44,   -1,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,  123,  124,  125,   -1,   58,   -1,   60,   61,   62,
   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,
   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,  260,
  123,  124,  125,   -1,   -1,   -1,   -1,   -1,   35,   -1,
   37,   -1,   -1,   -1,   41,   -1,   -1,   44,   -1,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   58,   -1,   60,   61,   62,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  312,  313,   -1,  315,   -1,  317,  318,  319,  320,
  321,  322,  323,  324,   91,   -1,   93,   94,   -1,  261,
  262,  263,  264,  265,  266,  267,  268,  269,  270,  271,
  272,  273,  274,  275,  276,  277,  278,  279,  280,  281,
   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,  125,   -1,
   -1,   33,   -1,   -1,  296,  297,   38,   -1,   40,   41,
   42,   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,
  312,   -1,   -1,  315,   -1,   -1,   -1,  319,  320,  321,
  322,  323,  324,  325,   -1,   -1,   -1,   -1,  261,  262,
  263,  264,  265,  266,  267,  268,  269,  270,  271,  272,
  273,  274,  275,  276,  277,  278,  279,  280,  281,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   33,   -1,   -1,  296,  297,   38,   -1,   40,   -1,   42,
   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,  312,
   -1,   -1,  315,   -1,  126,   -1,  319,  320,  321,  322,
  323,  324,  325,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  261,  262,  263,  264,  265,  266,
  267,  268,  269,  270,  271,  272,  273,  274,  275,  276,
  277,  278,  279,  280,  281,   35,   -1,   37,   -1,   -1,
   -1,   41,   -1,  126,   44,   -1,   -1,   47,   -1,  296,
  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   -1,
   60,   61,   62,   63,   -1,  312,   -1,   -1,  315,   -1,
   -1,   -1,  319,  320,  321,  322,  323,  324,  325,   33,
   -1,   -1,   -1,   -1,   38,   -1,   40,   -1,   42,   43,
   -1,   45,   -1,   93,   94,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  257,  258,  259,  260,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  123,  124,  125,   -1,   -1,   -1,   -1,
  282,   -1,   -1,   -1,   -1,   -1,  288,  289,  290,  291,
  292,  293,  294,  295,  296,  297,  298,  299,  300,  301,
   -1,  303,  304,  305,  306,  307,  308,  309,  310,  311,
   -1,  313,   -1,   -1,   -1,  317,  318,   -1,   -1,  123,
   -1,  125,  126,   -1,  257,  258,  259,  260,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   33,   -1,   -1,   -1,   -1,   38,   -1,   40,  282,
   42,   43,   -1,   45,   -1,  288,  289,  290,  291,  292,
  293,  294,  295,  296,  297,  298,  299,  300,  301,   -1,
  303,  304,  305,  306,  307,  308,  309,  310,  311,   -1,
  313,   -1,   -1,   -1,  317,  318,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   93,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  264,  265,  266,  267,  268,  269,
  270,  271,  272,  273,  274,  275,  276,  277,  278,  279,
  280,  281,   33,   -1,  126,   -1,   -1,   38,   -1,   40,
   41,   42,   43,   -1,   45,   -1,  296,  297,   -1,   -1,
   -1,   -1,   -1,  257,  258,  259,  260,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  315,   -1,   -1,   -1,  319,
  320,   -1,   -1,   -1,   -1,  325,   -1,   -1,  282,   -1,
   -1,   -1,   -1,   -1,  288,  289,  290,  291,  292,  293,
  294,  295,   -1,   -1,  298,  299,  300,  301,   -1,  303,
  304,  305,  306,  307,  308,  309,  310,  311,   -1,  313,
   -1,   33,   -1,  317,  318,   -1,   38,   -1,   40,   -1,
   42,   43,   -1,   45,   -1,  126,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  257,  258,  259,  260,   -1,
   -1,   93,   -1,   33,   -1,   -1,   -1,   -1,   38,   -1,
   40,   -1,   42,   43,   -1,   45,   -1,   -1,   -1,   -1,
  282,   -1,   -1,   -1,   -1,   -1,  288,  289,  290,  291,
  292,  293,  294,  295,  126,   -1,  298,  299,  300,  301,
   -1,  303,  304,  305,  306,  307,  308,  309,  310,  311,
   -1,  313,   -1,   -1,   -1,  317,  318,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,   -1,   -1,
   38,   -1,   40,   -1,   42,   43,   -1,   45,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,  260,
   -1,   -1,   -1,  123,   -1,   -1,  126,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  282,   -1,   -1,   -1,   -1,   -1,  288,  289,  290,
  291,  292,  293,  294,  295,   93,   -1,  298,  299,  300,
  301,   -1,  303,  304,  305,  306,  307,  308,  309,  310,
  311,   -1,  313,   33,   -1,   -1,  317,  318,   38,   -1,
   40,   -1,   42,   43,   -1,   45,   -1,   -1,  126,   -1,
   -1,   -1,   -1,   -1,   -1,  257,  258,  259,  260,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  282,   -1,   -1,   -1,   -1,   -1,  288,  289,  290,  291,
  292,  293,  294,  295,   -1,   -1,  298,  299,  300,  301,
   -1,  303,  304,  305,  306,  307,  308,  309,  310,  311,
   -1,  313,   -1,   -1,   -1,  317,  318,  257,  258,  259,
  260,   -1,   -1,   -1,   -1,   33,  126,   -1,   -1,   -1,
   38,   -1,   40,   -1,   42,   43,   -1,   45,   -1,   -1,
   -1,   -1,  282,   -1,   -1,   -1,   -1,   -1,  288,  289,
  290,  291,  292,  293,  294,  295,   -1,   -1,  298,  299,
  300,  301,   -1,  303,  304,  305,  306,  307,  308,  309,
  310,  311,   -1,  313,   -1,   -1,   -1,  317,  318,  257,
  258,  259,  260,   -1,   -1,   -1,   33,   -1,   -1,   -1,
   -1,   38,   -1,   40,   -1,   42,   43,   -1,   45,   -1,
   -1,   -1,   -1,   -1,  282,   -1,   -1,   -1,   -1,   -1,
  288,  289,  290,  291,  292,  293,  294,  295,  126,   -1,
  298,  299,  300,  301,   -1,  303,  304,  305,  306,  307,
  308,  309,  310,  311,   -1,  313,   -1,   -1,   -1,  317,
  318,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,
  260,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  126,
   -1,   -1,  282,   -1,   -1,   -1,   -1,   -1,  288,  289,
  290,  291,  292,  293,  294,  295,   -1,   -1,  298,  299,
  300,  301,   -1,  303,  304,  305,  306,  307,  308,  309,
  310,  311,   -1,  313,   -1,   -1,   -1,  317,  318,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,
  258,  259,  260,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  282,   -1,   -1,   -1,   -1,   -1,
  288,  289,  290,  291,  292,  293,  294,  295,   -1,   -1,
  298,  299,  300,  301,   -1,  303,  304,  305,  306,  307,
  308,  309,  310,  311,   -1,  313,   -1,   -1,   -1,  317,
  318,  258,  259,  260,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   40,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  282,   -1,   -1,   -1,   -1,
   -1,  288,  289,  290,  291,  292,  293,  294,  295,   -1,
   -1,  298,  299,  300,  301,   -1,  303,  304,  305,  306,
  307,  308,  309,  310,  311,   82,  313,   -1,   -1,   -1,
  317,  318,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  100,   -1,   -1,  103,   -1,   -1,  106,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  121,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  161,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  178,   -1,   -1,   -1,   -1,  183,   -1,   -1,   -1,
   -1,   -1,  189,   -1,   -1,  192,   -1,  194,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  225,  226,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  243,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  252,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  273,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  290,   -1,   -1,   -1,  294,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  304,
};
}
final static short YYFINAL=48;
final static short YYMAXTOKEN=326;
final static String yyname[] = {
"end-of-file",null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,null,"'!'",null,"'#'",null,"'%'","'&'",null,"'('","')'","'*'","'+'",
"','","'-'","'.'","'/'",null,null,null,null,null,null,null,null,null,null,"':'",
null,"'<'","'='","'>'","'?'",null,null,null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,"'['",null,"']'","'^'",null,null,null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,"'{'","'|'","'}'","'~'",null,null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,"IDENTIFIER","CONSTANT",
"STRING_LITERAL","SIZEOF","PTR_OP","INC_OP","DEC_OP","LEFT_OP","RIGHT_OP",
"LE_OP","GE_OP","EQ_OP","NE_OP","AND_OP","OR_OP","MUL_ASSIGN","DIV_ASSIGN",
"MOD_ASSIGN","ADD_ASSIGN","SUB_ASSIGN","LEFT_ASSIGN","RIGHT_ASSIGN",
"AND_ASSIGN","XOR_ASSIGN","OR_ASSIGN","TYPE_NAME","TYPEDEF","EXTERN","STATIC",
"AUTO","REGISTER","CHAR","SHORT","INT","LONG","SIGNED","UNSIGNED","FLOAT",
"DOUBLE","CONST","VOLATILE","VOID","STRUCT","UNION","ENUM","ELLIPSIS","VAR",
"PVAL","BMSCR","PREFSTR","PEXINFO","NULLPTR","STR","SPTR","ARRAY","GOSUB",
"CASE","DEFAULT","IF","ELSE","SWITCH","WHILE","DO","FOR","GOTO","CONTINUE",
"BREAK","RETURN","NEWLINE","LOWER_THAN_ELSE",
};
final static String yyrule[] = {
"$accept : hsp_source",
"hsp_source : chunk",
"hsp_source : hsp_source chunk",
"chunk : statement",
"chunk : NEWLINE",
"chunk :",
"macro : '#' IDENTIFIER args",
"macro : '#' IDENTIFIER",
"args : primary_expression args",
"args : primary_expression",
"lis : type_specifier IDENTIFIER ',' lis",
"lis : type_specifier ',' lis",
"lis : type_specifier IDENTIFIER",
"lis : type_specifier",
"statement : labeled_statement NEWLINE",
"statement : compound_statement NEWLINE",
"statement : expression_statement NEWLINE",
"statement : selection_statement",
"statement : iteration_statement NEWLINE",
"statement : jump_statement NEWLINE",
"statement : macro NEWLINE",
"primary_expression : lis",
"primary_expression : IDENTIFIER",
"primary_expression : CONSTANT",
"primary_expression : STRING_LITERAL",
"primary_expression : SWITCH",
"primary_expression : CASE",
"primary_expression : WHILE",
"primary_expression : '(' expression ')'",
"postfix_expression : primary_expression",
"postfix_expression : postfix_expression '[' expression ']'",
"postfix_expression : postfix_expression '(' ')'",
"postfix_expression : postfix_expression argument_expression_list",
"postfix_expression : postfix_expression '(' argument_expression_list ')'",
"postfix_expression : postfix_expression '.' IDENTIFIER",
"postfix_expression : postfix_expression PTR_OP STRING_LITERAL args",
"postfix_expression : postfix_expression jump_statement",
"postfix_expression : postfix_expression INC_OP",
"postfix_expression : postfix_expression DEC_OP",
"argument_expression_list : assignment_expression",
"argument_expression_list : argument_expression_list ',' assignment_expression",
"argument_expression_list : argument_expression_list ','",
"unary_expression : postfix_expression",
"unary_expression : unary_operator cast_expression",
"unary_expression : SIZEOF unary_expression",
"unary_expression : SIZEOF '(' type_name ')'",
"unary_operator : '&'",
"unary_operator : '*'",
"unary_operator : '+'",
"unary_operator : '-'",
"unary_operator : '~'",
"unary_operator : '!'",
"cast_expression : unary_expression",
"cast_expression : '(' type_name ')' cast_expression",
"multiplicative_expression : cast_expression",
"multiplicative_expression : multiplicative_expression '*' cast_expression",
"multiplicative_expression : multiplicative_expression '/' cast_expression",
"multiplicative_expression : multiplicative_expression '%' cast_expression",
"additive_expression : multiplicative_expression",
"additive_expression : additive_expression '+' multiplicative_expression",
"additive_expression : additive_expression '-' multiplicative_expression",
"shift_expression : additive_expression",
"shift_expression : shift_expression LEFT_OP additive_expression",
"shift_expression : shift_expression RIGHT_OP additive_expression",
"relational_expression : shift_expression",
"relational_expression : relational_expression '<' shift_expression",
"relational_expression : relational_expression '>' shift_expression",
"relational_expression : relational_expression LE_OP shift_expression",
"relational_expression : relational_expression GE_OP shift_expression",
"equality_expression : relational_expression",
"equality_expression : equality_expression EQ_OP relational_expression",
"equality_expression : equality_expression NE_OP relational_expression",
"and_expression : equality_expression",
"and_expression : and_expression '&' equality_expression",
"exclusive_or_expression : and_expression",
"exclusive_or_expression : exclusive_or_expression '^' and_expression",
"inclusive_or_expression : exclusive_or_expression",
"inclusive_or_expression : inclusive_or_expression '|' exclusive_or_expression",
"logical_and_expression : inclusive_or_expression",
"logical_and_expression : logical_and_expression AND_OP inclusive_or_expression",
"logical_or_expression : logical_and_expression",
"logical_or_expression : logical_or_expression OR_OP logical_and_expression",
"conditional_expression : logical_or_expression",
"conditional_expression : logical_or_expression '?' expression ':' conditional_expression",
"assignment_expression : conditional_expression",
"assignment_expression : unary_expression assignment_operator assignment_expression",
"assignment_operator : '='",
"assignment_operator : MUL_ASSIGN",
"assignment_operator : DIV_ASSIGN",
"assignment_operator : MOD_ASSIGN",
"assignment_operator : ADD_ASSIGN",
"assignment_operator : SUB_ASSIGN",
"assignment_operator : LEFT_ASSIGN",
"assignment_operator : RIGHT_ASSIGN",
"assignment_operator : AND_ASSIGN",
"assignment_operator : XOR_ASSIGN",
"assignment_operator : OR_ASSIGN",
"expression : assignment_expression",
"expression : expression ',' assignment_expression",
"constant_expression : conditional_expression",
"declaration : declaration_specifiers",
"declaration : declaration_specifiers init_declarator_list",
"declaration_specifiers : type_specifier",
"declaration_specifiers : type_specifier declaration_specifiers",
"declaration_specifiers : type_qualifier",
"declaration_specifiers : type_qualifier declaration_specifiers",
"init_declarator_list : init_declarator",
"init_declarator_list : init_declarator_list ',' init_declarator",
"init_declarator : declarator",
"init_declarator : declarator '=' initializer",
"type_specifier : VOID",
"type_specifier : CHAR",
"type_specifier : SHORT",
"type_specifier : INT",
"type_specifier : LONG",
"type_specifier : FLOAT",
"type_specifier : DOUBLE",
"type_specifier : SIGNED",
"type_specifier : UNSIGNED",
"type_specifier : struct_or_union_specifier",
"type_specifier : enum_specifier",
"type_specifier : TYPE_NAME",
"type_specifier : VAR",
"type_specifier : PVAL",
"type_specifier : BMSCR",
"type_specifier : PREFSTR",
"type_specifier : PEXINFO",
"type_specifier : NULLPTR",
"type_specifier : STR",
"type_specifier : SPTR",
"type_specifier : ARRAY",
"struct_or_union_specifier : struct_or_union IDENTIFIER '{' struct_declaration_list '}'",
"struct_or_union_specifier : struct_or_union '{' struct_declaration_list '}'",
"struct_or_union_specifier : struct_or_union IDENTIFIER",
"struct_or_union : STRUCT",
"struct_or_union : UNION",
"struct_declaration_list : struct_declaration",
"struct_declaration_list : struct_declaration_list struct_declaration",
"struct_declaration : specifier_qualifier_list struct_declarator_list",
"specifier_qualifier_list : type_specifier specifier_qualifier_list",
"specifier_qualifier_list : type_specifier",
"specifier_qualifier_list : type_qualifier specifier_qualifier_list",
"specifier_qualifier_list : type_qualifier",
"struct_declarator_list : struct_declarator",
"struct_declarator_list : struct_declarator_list ',' struct_declarator",
"struct_declarator : declarator",
"struct_declarator : ':' constant_expression",
"struct_declarator : declarator ':' constant_expression",
"enum_specifier : ENUM '{' enumerator_list '}'",
"enum_specifier : ENUM IDENTIFIER '{' enumerator_list '}'",
"enum_specifier : ENUM IDENTIFIER",
"enumerator_list : enumerator",
"enumerator_list : enumerator_list ',' enumerator",
"enumerator : IDENTIFIER",
"enumerator : IDENTIFIER '=' constant_expression",
"type_qualifier : CONST",
"type_qualifier : VOLATILE",
"declarator : direct_declarator",
"direct_declarator : IDENTIFIER",
"direct_declarator : '(' declarator ')'",
"direct_declarator : direct_declarator '[' constant_expression ']'",
"direct_declarator : direct_declarator '[' ']'",
"direct_declarator : direct_declarator '(' parameter_type_list ')'",
"direct_declarator : direct_declarator '(' identifier_list ')'",
"direct_declarator : direct_declarator '(' ')'",
"type_qualifier_list : type_qualifier",
"type_qualifier_list : type_qualifier_list type_qualifier",
"parameter_type_list : parameter_list",
"parameter_type_list : parameter_list ',' ELLIPSIS",
"parameter_list : parameter_declaration",
"parameter_list : parameter_list ',' parameter_declaration",
"parameter_declaration : declaration_specifiers declarator",
"parameter_declaration : declaration_specifiers abstract_declarator",
"parameter_declaration : declaration_specifiers",
"identifier_list : IDENTIFIER",
"identifier_list : identifier_list ',' IDENTIFIER",
"type_name : specifier_qualifier_list",
"type_name : specifier_qualifier_list abstract_declarator",
"abstract_declarator : direct_abstract_declarator",
"direct_abstract_declarator : '(' abstract_declarator ')'",
"direct_abstract_declarator : '[' ']'",
"direct_abstract_declarator : '[' constant_expression ']'",
"direct_abstract_declarator : direct_abstract_declarator '[' ']'",
"direct_abstract_declarator : direct_abstract_declarator '[' constant_expression ']'",
"direct_abstract_declarator : '(' ')'",
"direct_abstract_declarator : '(' parameter_type_list ')'",
"direct_abstract_declarator : direct_abstract_declarator '(' ')'",
"direct_abstract_declarator : direct_abstract_declarator '(' parameter_type_list ')'",
"initializer : assignment_expression",
"initializer : '{' initializer_list '}'",
"initializer : '{' initializer_list ',' '}'",
"initializer_list : initializer",
"initializer_list : initializer_list ',' initializer",
"labeled_statement : '*' IDENTIFIER",
"compound_statement : '{' NEWLINE '}'",
"compound_statement : '{' NEWLINE statement_list '}'",
"compound_statement : '{' NEWLINE declaration_list '}'",
"compound_statement : '{' NEWLINE declaration_list statement_list '}'",
"declaration_list : declaration",
"declaration_list : declaration_list declaration",
"statement_list : statement",
"statement_list : statement_list statement",
"expression_statement : expression",
"expression_statement : expression jump_statement",
"selection_statement : IF '(' expression ')' statement",
"selection_statement : IF '(' expression ')' statement ELSE statement",
"iteration_statement : WHILE '(' expression ')' statement",
"iteration_statement : DO statement WHILE '(' expression ')'",
"iteration_statement : FOR '(' expression_statement expression_statement ')' statement",
"iteration_statement : FOR '(' expression_statement expression_statement expression ')' statement",
"jump_statement : GOTO '*' IDENTIFIER",
"jump_statement : GOTO STRING_LITERAL ',' '*' IDENTIFIER",
"jump_statement : GOTO '*' IDENTIFIER",
"jump_statement : GOSUB '*' IDENTIFIER",
"jump_statement : GOSUB STRING_LITERAL ',' '*' IDENTIFIER",
"jump_statement : CONTINUE",
"jump_statement : CONTINUE expression",
"jump_statement : BREAK",
"jump_statement : RETURN",
"jump_statement : RETURN expression",
"translation_unit : external_declaration",
"translation_unit : translation_unit external_declaration",
"external_declaration : function_definition",
"external_declaration : declaration",
"function_definition : declaration_specifiers declarator declaration_list compound_statement",
"function_definition : declaration_specifiers declarator compound_statement",
"function_definition : declarator declaration_list compound_statement",
"function_definition : declarator compound_statement",
};

//#line 460 "Parser.y"

	// Referencia ao JFlex
	private Yylex lexer;

	/* Interface com o JFlex */
	private int yylex(){
          //System.out.println("ptr: " + stateptr + " ptrmax: " + stateptrmax);
		int yyl_return = -1;
		try {
			yyl_return = lexer.yylex();
		} catch (IOException e) {
			System.err.println("Erro de IO: " + e);
		}
		return yyl_return;
	}

	/* Reporte de erro */
	public void yyerror(String error){
          System.err.println("Error: " + error + " " + lexer.yystate() + " " + lexer.yytext());
        }

        // Interface com o JFlex eh criado no construtor
        public Parser(Reader r, boolean debug){
                yydebug = debug;
		lexer = new Yylex(r, this);
	}

	// Main
	public static void main(String[] args){
		try{
                        boolean debug = args[0].contains("test");
                        Parser yyparser = new Parser(new FileReader(args[0]), debug);
			yyparser.yyparse();
			} catch (Exception ex) {
				System.err.println("Error: " + ex);
			}
	}
//#line 2543 "Parser.java"
//###############################################################
// method: yylexdebug : check lexer state
//###############################################################
void yylexdebug(int state,int ch)
{
String s=null;
  if (ch < 0) ch=0;
  if (ch <= YYMAXTOKEN) //check index bounds
     s = yyname[ch];    //now get it
  if (s==null)
    s = "illegal-symbol";
  debug("state "+state+", reading "+ch+" ("+s+")");
}





//The following are now global, to aid in error reporting
int yyn;       //next next thing to do
int yym;       //
int yystate;   //current parsing state from state table
String yys;    //current token string


//###############################################################
// method: yyparse : parse input and execute indicated items
//###############################################################
int yyparse()
{
boolean doaction;
  init_stacks();
  yynerrs = 0;
  yyerrflag = 0;
  yychar = -1;          //impossible char forces a read
  yystate=0;            //initial state
  state_push(yystate);  //save it
  val_push(yylval);     //save empty value
  while (true) //until parsing is done, either correctly, or w/error
    {
    doaction=true;
    if (yydebug) debug("loop"); 
    //#### NEXT ACTION (from reduction table)
    for (yyn=yydefred[yystate];yyn==0;yyn=yydefred[yystate])
      {
      if (yydebug) debug("yyn:"+yyn+"  state:"+yystate+"  yychar:"+yychar);
      if (yychar < 0)      //we want a char?
        {
        yychar = yylex();  //get next token
        if (yydebug) debug(" next yychar:"+yychar);
        //#### ERROR CHECK ####
        if (yychar < 0)    //it it didn't work/error
          {
          yychar = 0;      //change it to default string (no -1!)
          if (yydebug)
            yylexdebug(yystate,yychar);
          }
        }//yychar<0
      yyn = yysindex[yystate];  //get amount to shift by (shift index)
      if ((yyn != 0) && (yyn += yychar) >= 0 &&
          yyn <= YYTABLESIZE && yycheck[yyn] == yychar)
        {
        if (yydebug)
          debug("state "+yystate+", shifting to state "+yytable[yyn]);
        //#### NEXT STATE ####
        yystate = yytable[yyn];//we are in a new state
        state_push(yystate);   //save it
        val_push(yylval);      //push our lval as the input for next rule
        yychar = -1;           //since we have 'eaten' a token, say we need another
        if (yyerrflag > 0)     //have we recovered an error?
           --yyerrflag;        //give ourselves credit
        doaction=false;        //but don't process yet
        break;   //quit the yyn=0 loop
        }

    yyn = yyrindex[yystate];  //reduce
    if ((yyn !=0 ) && (yyn += yychar) >= 0 &&
            yyn <= YYTABLESIZE && yycheck[yyn] == yychar)
      {   //we reduced!
      if (yydebug) debug("reduce");
      yyn = yytable[yyn];
      doaction=true; //get ready to execute
      break;         //drop down to actions
      }
    else //ERROR RECOVERY
      {
      if (yyerrflag==0)
        {
        yyerror("syntax error");
        yynerrs++;
        }
      if (yyerrflag < 3) //low error count?
        {
        yyerrflag = 3;
        while (true)   //do until break
          {
          if (stateptr<0)   //check for under & overflow here
            {
            yyerror("stack underflow. aborting...");  //note lower case 's'
            return 1;
            }
          yyn = yysindex[state_peek(0)];
          if ((yyn != 0) && (yyn += YYERRCODE) >= 0 &&
                    yyn <= YYTABLESIZE && yycheck[yyn] == YYERRCODE)
            {
            if (yydebug)
              debug("state "+state_peek(0)+", error recovery shifting to state "+yytable[yyn]+" ");
            yystate = yytable[yyn];
            state_push(yystate);
            val_push(yylval);
            doaction=false;
            break;
            }
          else
            {
            if (yydebug)
              debug("error recovery discarding state "+state_peek(0)+" ");
            if (stateptr<0)   //check for under & overflow here
              {
              yyerror("Stack underflow. aborting...");  //capital 'S'
              return 1;
              }
            state_pop();
            val_pop();
            }
          }
        }
      else            //discard this token
        {
        if (yychar == 0)
          return 1; //yyabort
        if (yydebug)
          {
          yys = null;
          if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
          if (yys == null) yys = "illegal-symbol";
          debug("state "+yystate+", error recovery discards token "+yychar+" ("+yys+")");
          }
        yychar = -1;  //read another
        }
      }//end error recovery
    }//yyn=0 loop
    if (!doaction)   //any reason not to proceed?
      continue;      //skip action
    yym = yylen[yyn];          //get count of terminals on rhs
    if (yydebug)
      debug("state "+yystate+", reducing "+yym+" by rule "+yyn+" ("+yyrule[yyn]+")");
    if (yym>0)                 //if count of rhs not 'nil'
      yyval = val_peek(yym-1); //get current semantic value
    yyval = dup_yyval(yyval); //duplicate yyval if ParserVal is used as semantic value
    switch(yyn)
      {
//########## USER-SUPPLIED ACTIONS ##########
case 3:
//#line 37 "Parser.y"
{ System.out.println("ENDSTATEMENT"); }
break;
case 6:
//#line 43 "Parser.y"
{ System.out.println("MACRO"); }
break;
//#line 2700 "Parser.java"
//########## END OF USER-SUPPLIED ACTIONS ##########
    }//switch
    //#### Now let's reduce... ####
    if (yydebug) debug("reduce");
    state_drop(yym);             //we just reduced yylen states
    yystate = state_peek(0);     //get new state
    val_drop(yym);               //corresponding value drop
    yym = yylhs[yyn];            //select next TERMINAL(on lhs)
    if (yystate == 0 && yym == 0)//done? 'rest' state and at first TERMINAL
      {
      if (yydebug) debug("After reduction, shifting from state 0 to state "+YYFINAL+"");
      yystate = YYFINAL;         //explicitly say we're done
      state_push(YYFINAL);       //and save it
      val_push(yyval);           //also save the semantic value of parsing
      if (yychar < 0)            //we want another character?
        {
        yychar = yylex();        //get next character
        if (yychar<0) yychar=0;  //clean, if necessary
        if (yydebug)
          yylexdebug(yystate,yychar);
        }
      if (yychar == 0)          //Good exit (if lex returns 0 ;-)
         break;                 //quit the loop--all DONE
      }//if yystate
    else                        //else not done yet
      {                         //get next state and push, for next yydefred[]
      yyn = yygindex[yym];      //find out where to go
      if ((yyn != 0) && (yyn += yystate) >= 0 &&
            yyn <= YYTABLESIZE && yycheck[yyn] == yystate)
        yystate = yytable[yyn]; //get new state
      else
        yystate = yydgoto[yym]; //else go to new defred
      if (yydebug) debug("after reduction, shifting from state "+state_peek(0)+" to state "+yystate+"");
      state_push(yystate);     //going again, so push state & val...
      val_push(yyval);         //for next action
      }
    }//main loop
  return 0;//yyaccept!!
}
//## end of method parse() ######################################



//## run() --- for Thread #######################################
/**
 * A default run method, used for operating this parser
 * object in the background.  It is intended for extending Thread
 * or implementing Runnable.  Turn off with -Jnorun .
 */
public void run()
{
  yyparse();
}
//## end of method run() ########################################



//## Constructors ###############################################
/**
 * Default constructor.  Turn off with -Jnoconstruct .

 */
public Parser()
{
  //nothing to do
}


/**
 * Create a parser, setting the debug to true or false.
 * @param debugMe true for debugging, false for no debug.
 */
public Parser(boolean debugMe)
{
  yydebug=debugMe;
}
//###############################################################



}
//################### END OF CLASS ##############################
